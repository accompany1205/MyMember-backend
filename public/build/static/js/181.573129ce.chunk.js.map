{"version":3,"sources":["views/apps/user/list/leadList.js"],"names":["UsersList","state","rowData","pageSize","isVisible","reload","collapse","status","role","selectStatus","verified","department","defaultColDef","sortable","resizable","searchVal","loading","columnDefs","headerName","field","width","checkboxSelection","headerCheckboxSelectionFilteredOnly","headerCheckboxSelection","filter","cellRendererFramework","params","className","onClick","history","push","pathname","userId","data","studentId","_id","src","value","alt","height","toUpperCase","substr","toLowerCase","style","backgroundColor","textTransform","size","getRowHeight","onGridReady","gridApi","api","gridColumnApi","columnApi","filterData","column","val","modelObj","type","getFilterInstance","setModel","onFilterChanged","filterSize","paginationSetPageSize","Number","setState","updateSearchQuery","setQuickFilter","refreshCard","setTimeout","toggleCollapse","onEntered","onEntering","onExiting","onExited","removeCard","this","props","GET_LEAD_LIST","prevProps","lead_student","sm","breadCrumbTitle","breadCrumbParent","breadCrumbActive","href","toggleModal","tag","right","placeholder","onChange","e","target","id","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","paginationPageSize","enableRtl","direction","React","Component","connect","student"],"mappings":"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","file":"static/js/181.573129ce.chunk.js","sourcesContent":["import React from \"react\"\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Input,\n  Row,\n  Col,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,Button\n\n} from \"reactstrap\"\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\"\nimport { ContextLayout } from \"../../../../utility/context/Layout\"\nimport {GET_LEAD_LIST} from '../../../../redux/actions/newstudent/index';\nimport {connect} from 'react-redux';\nimport { AgGridReact } from \"ag-grid-react\"\nimport Spinner from \"../../../../components/@vuexy/spinner/Loading-spinner\"\nimport {\n  Edit,\n  Trash2,\n  ChevronDown,\n  Printer,\n  Download,\n  Info,\n  Mail,\n  Phone,\n  Eye,\n  Plus,\n  User\n} from \"react-feather\"\nimport { history } from \"../../../../history\"\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\"\nimport \"../../../../assets/scss/pages/users.scss\"\nimport CandidateModal from \"./CandidateModal\"\nimport TestModal from \"./TestModal\"\nimport StudentlistuserEyeModal from \"./studentlistuserEyeModal\"\nimport StudentlistuserEmailModal from \"../../../pages/studentlistEmailicon/studentlistuserEmailModal\"\nimport StusercalliconModal from \"../../../pages/studentlisticoncall/stusercalliconModal\"\n\n\n\nclass UsersList extends React.Component {\n  state = {\n    rowData: null,\n    pageSize: 20,\n    isVisible: true,\n    reload: false,\n    collapse: true,\n    status: \"Opened\",\n    role: \"All\",\n    selectStatus: \"All\",\n    verified: \"All\",\n    department: \"All\",\n    defaultColDef: {\n      sortable: true,\n      resizable:true\n    },\n    searchVal: \"\",\n    loading:true,\n    columnDefs: [\n      {\n        headerName: \"\",\n        field: \"\",\n        width: 50,\n        checkboxSelection: true,\n        headerCheckboxSelectionFilteredOnly: true,\n        headerCheckboxSelection: true\n      },\n      {\n        headerName: \"Photo\",\n        field: \"memberprofileImage\",\n        filter: true,\n        width: 120,\n        cellRendererFramework: params => {\n\n          return (\n            <div\n              className=\"d-flex align-items-center cursor-pointer\"\n              onClick={() => history.push({\n                pathname : \"/student-info\",\n                state : {\n                  userId : params.data.userId,\n                  studentId : params.data._id,\n                  data : params.data\n                }\n              })}\n            >\n              <img\n                className=\"rounded-circle mr-50\"\n                src={params.value}\n                alt=\"user avatar\"\n                height=\"50\"\n                width=\"50\"\n              />\n              {/* <span>{params.data.name}</span> */}\n            </div>\n          )\n        }\n      },\n      {\n        headerName: \"First Name\",\n        field: \"firstName\",\n        filter: true,\n        width: 140,\n        cellRendererFramework : (params) => {\n          return `${params.value[0].toUpperCase()}${params.value.substr(1).toLowerCase()}`;\n        }\n      },\n      {\n        headerName: \"Last Name\",\n        field: \"lastName\",\n        filter: true,\n        width: 140,\n        cellRendererFramework : (params) => {\n          return `${params.value[0].toUpperCase()}${params.value.substr(1).toLowerCase()}`;\n        }\n      },\n\n      {\n        headerName: \"Status\",\n        field: \"status\",\n        filter: true,\n        width: 130,\n        cellRendererFramework: params => {\n          return params.value.toLowerCase() === \"active\" ? (\n            <div className=\"badge badge-pill badge-light-success\">\n             Active\n            </div>\n          ) : params.value.toLowerCase() === \"expired\" ? (\n            <div className=\"badge badge-pill badge-light-danger\">\n              Expired\n            </div>\n          ): params.value.toLowerCase() === \"Freezed\" ? (\n            <div className=\"badge badge-pill badge-light-yellow\">\n              Frozen\n            </div>\n          ): params.value.toLowerCase() === \"overdue\" ? (\n            <div className=\"badge badge-pill badge-light-orange\">\n              Overdue\n            </div>\n          ): params.value.toLowerCase() === \"terminate\" ? (\n            <div className=\"badge badge-pill badge-light-danger\">\n              Terminate\n            </div>\n          ): params.value.toLowerCase() === \"inactive\" ? (\n            <div className=\"badge badge-pill badge-light-grey\">\n             None\n            </div>\n          ):<div className=\"badge badge-pill badge-light-grey\">\n           None\n       </div>\n        }\n      },\n      {\n        headerName: \"Primary Phone\",\n        field: \"primaryPhone\",\n        filter: true,\n        width: 170\n      },\n      // {\n      //   headerName: \"Program\",\n      //   field: \"program\",\n      //   filter: true,\n      //   width: 150,\n      //   cellRendererFramework : (params) => {\n      //     return `${params.value.split(\" \").map(v => `${v.charAt(0).toUpperCase()}${v.substr(1).toLowerCase()}`).join(\" \")}`;\n      //   }\n      // },\n      {\n        headerName: \"Program Category\",\n        field: \"category\",\n        filter: true,\n        width: 190,\n        cellRendererFramework: params => {\n          return params.value === \"program3\" ? (\n            <div className=\"badge badge-pill badge-light-orange\" style={{backgroundColor:\"rgb(163, 5, 5)\"}}>\n             Pragrame3\n            </div>\n          ) : params.value === \"program 4\" ? (\n            <div className=\"badge badge-pill badge-light-danger\" style={{textTransform:\"none\"}}>\n             Program 4\n\n            </div>\n          ) : params.value === \"Freezed\" ? (\n            <div className=\"badge badge-pill badge-light-yellow\">\n              Frozen\n            </div>\n          ) : params.value === \"overdue\" ? (\n            <div className=\"badge badge-pill badge-light-orange\">\n              Overdue\n            </div>\n          ) : params.value === \"terminate\" ? (\n            <div className=\"badge badge-pill badge-light-danger\">\n              Terminate\n            </div>\n          ) : params.value === \"inactive\" ? (\n            <div className=\"badge badge-pill badge-light-grey\">\n              None\n            </div>\n          ) : <div className=\"badge badge-pill badge-light-light\">\n            <div className=\"badge badge-pill badge-light-grey\">\n            N/A\n            </div>\n\n       </div>\n        }\n      },\n      {\n        headerName: \"Gender\",\n        field: \"gender\",\n        filter: true,\n        width: 150\n      },\n      {\n        headerName: \"Country\",\n        field: \"country\",\n        filter: true,\n        width: 200,\n        // cellRendererFramework: params => {\n        //   return params.value.toUpperCase();\n        // }\n      },\n      // {\n      //   headerName: \"Email\",\n      //   field: \"email\",\n      //   filter: true,\n      //   width: 250\n      // },\n\n      {\n        headerName: \"Belt Size\",\n        field: \"studentBeltSize\",\n        filter: true,\n        width: 150,\n        // cellRendererFramework : (params) => {\n        //   return `${params.value[0].toUpperCase()}${params.value.substr(1).toLowerCase()}`;\n        // }\n      },\n      // {\n      //   headerName: \"Rating\",\n      //   field: \"\",\n      //   filter: true,\n      //   width: 125,\n      //   cellRendererFramework: params => {\n      //     return params.value === \"active\" ? (\n      //       <div className=\"badge badge-pill badge-light-warning\">\n      //        876\n      //       </div>\n      //     ) : params.value === \"blocked\" ? (\n      //       <div className=\"badge badge-pill badge-light-warning\">\n      //         8768\n      //       </div>\n      //     ) : params.value === \"deactivated\" ? (\n      //       <div className=\"badge badge-pill badge-light-warning\">\n      //          786\n      //       </div>\n      //     ) : null\n      //   }\n\n      // },\n      // {\n      //   headerName: \"Department\",\n      //   field: \"department\",\n      //   filter: true,\n      //   width: 160\n      // },\n      {\n        headerName: \"Manage\",\n        field: \"transactions\",\n        width: 150,\n        cellRendererFramework: params => {\n          return (\n            <div className=\"actions cursor-pointer\">\n              <Info\n                className=\"mr-50\"\n                size={18}\n              />\n              <StudentlistuserEyeModal />\n\n              <StudentlistuserEmailModal />\n              <StusercalliconModal />\n              {/* <Phone\n               className=\"mr-50\"\n               size={20}\n              /> */}\n\n            </div>\n          )\n        }\n      }\n    ],\n    getRowHeight: function (params) {\n      return 70;\n    }\n  }\n\n  componentDidMount() {\n    // await axios.get(\"api/users/list\").then(response => {\n    //   let rowData = response.data\n    //   this.setState({ rowData })\n    // })\n    this.props.GET_LEAD_LIST();\n  }\n\n  componentDidUpdate(prevProps){\n     if(prevProps.lead_student !== this.props.lead_student){\n       this.setState({\n         rowData : this.props.lead_student,\n         loading:false\n       })\n     }\n  }\n\n  onGridReady = params => {\n    this.gridApi = params.api\n    this.gridColumnApi = params.columnApi\n  }\n\n  filterData = (column, val) => {\n    var filter = this.gridApi.getFilterInstance(column)\n    var modelObj = null\n    if (val !== \"all\") {\n      modelObj = {\n        type: \"equals\",\n        filter: val\n      }\n    }\n    filter.setModel(modelObj)\n    this.gridApi.onFilterChanged()\n  }\n\n  filterSize = val => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val))\n      this.setState({\n        pageSize: val\n      })\n    }\n  }\n  updateSearchQuery = val => {\n    this.gridApi.setQuickFilter(val)\n    this.setState({\n      searchVal: val\n    })\n  }\n\n  refreshCard = () => {\n    this.setState({ reload: true })\n    setTimeout(() => {\n      this.setState({\n        reload: false,\n        role: \"All\",\n        selectStatus: \"All\",\n        verified: \"All\",\n        department: \"All\"\n      })\n    }, 500)\n  }\n\n  toggleCollapse = () => {\n    this.setState(state => ({ collapse: !state.collapse }))\n  }\n  onEntered = () => {\n    this.setState({ status: \"Opened\" })\n  }\n  onEntering = () => {\n    this.setState({ status: \"Opening...\" })\n  }\n\n  onEntered = () => {\n    this.setState({ status: \"Opened\" })\n  }\n  onExiting = () => {\n    this.setState({ status: \"Closing...\" })\n  }\n  onExited = () => {\n    this.setState({ status: \"Closed\" })\n  }\n  removeCard = () => {\n    this.setState({ isVisible: false })\n  }\n\n  render() {\n    const { rowData, columnDefs, defaultColDef, pageSize } = this.state\n    return (\n      <Row className=\"app-user-list\">\n\n\n        <Col sm=\"12\">\n        <Breadcrumbs\n          breadCrumbTitle=\"Lead Student\"\n          breadCrumbParent=\"Home\"\n          breadCrumbActive=\"Lead Student\"\n        />\n          <Card>\n            <CardHeader>\n              <div className=\"list-icon\">\n              <a href=\"/data-list/add-new-student\">\n                <Button\n                className=\"btn-lg fides btn waves-effect waves-light\"\n                onClick={this.toggleModal}\n                >\n                  <Plus size={21} />\n                  <br></br>\n                  Add\n                </Button>\n                </a>\n\n                <Button className=\"btn-lg fides5 btn waves-effect waves-light\">\n                  <Phone size={21} />\n                  <br></br>\n                  Contact\n                </Button>\n                {/* <Button className=\"btn-lg fides4 btn waves-effect waves-light\">\n                  <User size={21} />\n                  <br></br>\n                  Candidate\n                </Button> */}\n                <CandidateModal />\n                <TestModal />\n                {/* <Button className=\"btn-lg fides3 btn waves-effect waves-light\">\n                  <Plus size={21} />\n                  <br></br>\n                  Test\n                </Button> */}\n                <Button className=\"btn-lg fides2 btn waves-effect waves-light\">\n                  <Printer size={21} />\n                  <br></br>\n                  Print\n                </Button>\n                <Button className=\"btn-lg fides1 btn waves-effect waves-light\">\n                  <Download size={21} />\n                  <br></br>\n                  Export\n                </Button>\n              </div>\n            </CardHeader>\n            <CardBody>\n              <div className=\"ag-theme-material ag-grid-table\">\n                <div className=\"ag-grid-actions d-flex justify-content-between flex-wrap mb-1\">\n                  <div className=\"sort-dropdown\">\n                    <UncontrolledDropdown className=\"ag-dropdown p-1\">\n                      <DropdownToggle tag=\"div\">\n                        1 - {pageSize} of 150\n                        <ChevronDown className=\"ml-50\" size={15} />\n                      </DropdownToggle>\n                      <DropdownMenu right>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(20)}\n                        >\n                          20\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(50)}\n                        >\n                          50\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(100)}\n                        >\n                          100\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(150)}\n                        >\n                          150\n                        </DropdownItem>\n                      </DropdownMenu>\n                    </UncontrolledDropdown>\n                  </div>\n                  <div className=\"filter-actions d-flex\">\n                    <Input\n                      className=\"w-70 mr-1 mb-1 mb-sm-0\"\n                      type=\"text\"\n                      placeholder=\"search...\"\n                      onChange={e => this.updateSearchQuery(e.target.value)}\n                      value={this.state.searchVal}\n                    />\n                    {/* <div className=\"dropdown actions-dropdown\">\n                      <UncontrolledButtonDropdown>\n                        <DropdownToggle className=\"px-2 py-75\" color=\"white\">\n                          Actions\n                          <ChevronDown className=\"ml-50\" size={15} />\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                          <DropdownItem tag=\"a\">\n                            <Trash2 size={15} />\n                            <span className=\"align-middle ml-50\">Delete</span>\n                          </DropdownItem>\n                          <DropdownItem tag=\"a\">\n                            <Clipboard size={15} />\n                            <span className=\"align-middle ml-50\">Archive</span>\n                          </DropdownItem>\n                          <DropdownItem tag=\"a\">\n                            <Printer size={15} />\n                            <span className=\"align-middle ml-50\">Print</span>\n                          </DropdownItem>\n                          <DropdownItem tag=\"a\">\n                            <Download size={15} />\n                            <span className=\"align-middle ml-50\">CSV</span>\n                          </DropdownItem>\n                        </DropdownMenu>\n                      </UncontrolledButtonDropdown>\n                    </div> */}\n                  </div>\n                </div>\n                {!this.state.loading ? (\n                  <>\n                {this.state.rowData !== null ? (\n                  <ContextLayout.Consumer>\n                    {context => (\n                      <AgGridReact\n\n                        gridOptions={{}}\n                        rowSelection=\"multiple\"\n                        defaultColDef={defaultColDef}\n                        columnDefs={columnDefs}\n                        rowData={rowData}\n                        onGridReady={this.onGridReady}\n                        colResizeDefault={\"shift\"}\n                        animateRows={true}\n                        floatingFilter={true}\n                        pagination={true}\n                        pivotPanelShow=\"always\"\n                        paginationPageSize={pageSize}\n                        resizable={true}\n                        getRowHeight={this.state.getRowHeight}\n                        enableRtl={context.state.direction === \"rtl\"}\n                      />\n                    )}\n                  </ContextLayout.Consumer>\n                ) : null}\n                </> ):( <div id=\"loading-bar\">\n\n           <Spinner loading={true}/>\n         </div>\n         )}\n              </div>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n      lead_student : state.student.lead_student\n    }\n}\n\nexport default connect(mapStateToProps, {GET_LEAD_LIST})(UsersList)\n"],"sourceRoot":""}