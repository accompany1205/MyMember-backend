{"version":3,"sources":["redux/actions/data-list/index.js","views/ui-elements/data-list/DataListSidebar.js","views/ui-elements/data-list/DataListConfig.js","components/@vuexy/checkbox/CheckboxesVuexy.js","components/@vuexy/chips/ChipComponent.js"],"names":["getData","params","dispatch","a","axios","get","then","response","type","data","totalPages","getInitialData","filterData","value","deleteData","obj","post","updateData","getState","addData","dataList","DataListSidebar","state","id","name","category","order_status","price","img","popularity","popValue","addNew","handleSubmit","props","Object","keys","dataParams","length","page","perPage","handleSidebar","prevProps","prevState","this","setState","show","className","classnames","size","onClick","options","wheelPropagation","thumbView","FormGroup","src","alt","htmlFor","color","hidden","onChange","e","URL","createObjectURL","target","files","Button","Label","for","Input","placeholder","outline","Component","chipColors","delivered","pending","canceled","selectedStyle","rows","selectedHighlighStyle","backgroundColor","boxShadow","transform","ActionsComponent","currentData","row","deleteRow","CustomHeader","UncontrolledDropdown","DropdownToggle","DropdownMenu","tag","right","DropdownItem","index","total","handleRowsPerPage","handleFilter","DataListConfig","currentPage","columns","selector","sortable","minWidth","cell","title","Progress","text","parsedFilter","handleCurrentData","handleDelete","allData","rowsPerPage","sidebar","selected","totalRecords","sortIndex","undefined","history","push","boolean","urlPrefix","parseInt","handlePagination","height","pagination","paginationServer","paginationComponent","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","containerClassName","activeClassName","forcePage","onPageChange","noHeader","subHeader","selectableRows","responsive","pointerOnHover","selectableRowsHighlight","onSelectedRowsChange","selectedRows","customStyles","subHeaderComponent","sortIcon","selectableRowsComponent","Checkbox","selectableRowsComponentProps","icon","label","filteredData","connect","CheckBoxesVuexy","defaultChecked","checked","disabled","React","Chip","closeChip","closest","remove","avatarImg","avatarText","avatarIcon","avatarColor","width","closable","closableIcon"],"mappings":"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","file":"static/js/22.dea1168f.chunk.js","sourcesContent":["import axios from \"axios\"\n\nexport const getData = params => {\n  return async dispatch => {\n    await axios.get(\"/api/datalist/data\", params).then(response => {\n      dispatch({\n        type: \"GET_DATA\",\n        data: response.data.data,\n        totalPages: response.data.totalPages,\n        params\n      })\n    })\n  }\n}\n\nexport const getInitialData = () => {\n  return async dispatch => {\n    await axios.get(\"/api/datalist/initial-data\").then(response => {\n      dispatch({ type: \"GET_ALL_DATA\", data: response.data })\n    })\n  }\n}\n\nexport const filterData = value => {\n  return dispatch => dispatch({ type: \"FILTER_DATA\", value })\n}\n\nexport const deleteData = obj => {\n  return dispatch => {\n    axios\n      .post(\"/api/datalist/delete-data\", {\n        obj\n      })\n      .then(response => {\n        dispatch({ type: \"DELETE_DATA\", obj })\n      })\n  }\n}\n\nexport const updateData = obj => {\n  return (dispatch, getState) => {\n    axios\n      .post(\"/api/datalist/update-data\", {\n        obj\n      })\n      .then(response => {\n        dispatch({ type: \"UPDATE_DATA\", obj })\n      })\n  }\n}\n\nexport const addData = obj => {\n  return (dispatch, getState) => {\n    let params = getState().dataList.params\n    axios\n      .post(\"/api/datalist/add-data\", {\n        obj\n      })\n      .then(response => {\n        dispatch({ type: \"ADD_DATA\", obj })\n        dispatch(getData(params))\n      })\n  }\n}\n","import React, { Component } from \"react\"\nimport { Label, Input, FormGroup, Button } from \"reactstrap\"\nimport { X } from \"react-feather\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport classnames from \"classnames\"\n\nclass DataListSidebar extends Component {\n  state = {\n    id: \"\",\n    name: \"\",\n    category: \"Audio\",\n    order_status: \"pending\",\n    price: \"\",\n    img: \"\",\n    popularity: {\n      popValue: \"\"\n    }\n  }\n\n  addNew = false\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.data !== null && prevProps.data === null) {\n      if (this.props.data.id !== prevState.id) {\n        this.setState({ id: this.props.data.id })\n      }\n      if (this.props.data.name !== prevState.name) {\n        this.setState({ name: this.props.data.name })\n      }\n      if (this.props.data.category !== prevState.category) {\n        this.setState({ category: this.props.data.category })\n      }\n      if (this.props.data.popularity.popValue !== prevState.popularity) {\n        this.setState({\n          popularity: {\n            ...this.state.popularity,\n            popValue: this.props.data.popularity.popValue\n          }\n        })\n      }\n      if (this.props.data.order_status !== prevState.order_status) {\n        this.setState({ order_status: this.props.data.order_status })\n      }\n      if (this.props.data.price !== prevState.price) {\n        this.setState({ price: this.props.data.price })\n      }\n      if (this.props.data.img !== prevState.img) {\n        this.setState({ img: this.props.data.img })\n      }\n    }\n    if (this.props.data === null && prevProps.data !== null) {\n      this.setState({\n        id: \"\",\n        name: \"\",\n        category: \"Audio\",\n        order_status: \"pending\",\n        price: \"\",\n        img: \"\",\n        popularity: {\n          popValue: \"\"\n        }\n      })\n    }\n    if (this.addNew) {\n      this.setState({\n        id: \"\",\n        name: \"\",\n        category: \"Audio\",\n        order_status: \"pending\",\n        price: \"\",\n        img: \"\",\n        popularity: {\n          popValue: \"\"\n        }\n      })\n    }\n    this.addNew = false\n  }\n\n  handleSubmit = obj => {\n    if (this.props.data !== null) {\n      this.props.updateData(obj)\n    } else {\n      this.addNew = true\n      this.props.addData(obj)\n    }\n    let params = Object.keys(this.props.dataParams).length\n      ? this.props.dataParams\n      : { page: 1, perPage: 4 }\n    this.props.handleSidebar(false, true)\n    this.props.getData(params)\n  }\n\n  render() {\n    let { show, handleSidebar, data } = this.props\n    let { name, category, order_status, price, popularity, img } = this.state\n    return (\n      <div\n        className={classnames(\"data-list-sidebar\", {\n          show: show\n        })}>\n        <div className=\"data-list-sidebar-header mt-2 px-2 d-flex justify-content-between\">\n          <h4>{data !== null ? \"UPDATE DATA\" : \"ADD NEW DATA\"}</h4>\n          <X size={20} onClick={() => handleSidebar(false, true)} />\n        </div>\n        <PerfectScrollbar\n          className=\"data-list-fields px-2 mt-3\"\n          options={{ wheelPropagation: false }}>\n          {this.props.thumbView && img.length ? (\n            <FormGroup className=\"text-center\">\n              <img className=\"img-fluid\" src={img} alt={name} />\n              <div className=\"d-flex flex-wrap justify-content-between mt-2\">\n                <label\n                  className=\"btn btn-flat-primary\"\n                  htmlFor=\"update-image\"\n                  color=\"primary\">\n                  Upload Image\n                  <input\n                    type=\"file\"\n                    id=\"update-image\"\n                    hidden\n                    onChange={e =>\n                      this.setState({\n                        img: URL.createObjectURL(e.target.files[0])\n                      })\n                    }\n                  />\n                </label>\n                <Button\n                  color=\"flat-danger\"\n                  onClick={() => this.setState({ img: \"\" })}>\n                  Remove Image\n                </Button>\n              </div>\n            </FormGroup>\n          ) : null}\n          <FormGroup>\n            <Label for=\"data-name\">Name</Label>\n            <Input\n              type=\"text\"\n              value={name}\n              placeholder=\"Apple IphoneX\"\n              onChange={e => this.setState({ name: e.target.value })}\n              id=\"data-name\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-category\">Category</Label>\n            <Input\n              type=\"select\"\n              id=\"data-category\"\n              value={category}\n              onChange={e => this.setState({ category: e.target.value })}>\n              <option>Audio</option>\n              <option>Computers</option>\n              <option>Fitness</option>\n              <option>Appliances</option>\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-popularity\">Popularity</Label>\n            <Input\n              type=\"number\"\n              value={popularity.popValue}\n              id=\"data-popularity\"\n              placeholder=\"0 - 100%\"\n              onChange={e =>\n                this.setState({\n                  popularity: { popularity, popValue: e.target.value }\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-status\">Order Status</Label>\n            <Input\n              type=\"select\"\n              id=\"data-status\"\n              value={order_status}\n              onChange={e => this.setState({ order_status: e.target.value })}>\n              <option>pending</option>\n              <option>canceled</option>\n              <option>delivered</option>\n              <option>on hold</option>\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-price\">Price</Label>\n            <Input\n              type=\"number\"\n              value={price}\n              onChange={e => this.setState({ price: e.target.value })}\n              id=\"data-price\"\n              placeholder=\"69.99\"\n            />\n          </FormGroup>\n          {this.props.thumbView && img.length <= 0 ? (\n            <label\n              className=\"btn btn-primary\"\n              htmlFor=\"upload-image\"\n              color=\"primary\">\n              Upload Image\n              <input\n                type=\"file\"\n                id=\"upload-image\"\n                hidden\n                onChange={e =>\n                  this.setState({ img: URL.createObjectURL(e.target.files[0]) })\n                }\n              />\n            </label>\n          ) : null}\n        </PerfectScrollbar>\n        <div className=\"data-list-sidebar-footer px-2 d-flex justify-content-start align-items-center mt-1\">\n          <Button color=\"primary\" onClick={() => this.handleSubmit(this.state)}>\n            {data !== null ? \"Update\" : \"Submit\"}\n          </Button>\n          <Button\n            className=\"ml-1\"\n            color=\"danger\"\n            outline\n            onClick={() => handleSidebar(false, true)}>\n            Cancel\n          </Button>\n        </div>\n      </div>\n    )\n  }\n}\nexport default DataListSidebar\n","import React, { Component } from \"react\"\nimport {\n  Button,\n  Progress,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport classnames from \"classnames\"\nimport ReactPaginate from \"react-paginate\"\nimport { history } from \"../../../history\"\nimport {\n  Edit,\n  Trash,\n  ChevronDown,\n  Plus,\n  Check,\n  ChevronLeft,\n  ChevronRight\n} from \"react-feather\"\nimport { connect } from \"react-redux\"\nimport {\n  getData,\n  getInitialData,\n  deleteData,\n  updateData,\n  addData,\n  filterData\n} from \"../../../redux/actions/data-list/\"\nimport Sidebar from \"./DataListSidebar\"\nimport Chip from \"../../../components/@vuexy/chips/ChipComponent\"\nimport Checkbox from \"../../../components/@vuexy/checkbox/CheckboxesVuexy\"\n\nimport \"../../../assets/scss/plugins/extensions/react-paginate.scss\"\nimport \"../../../assets/scss/pages/data-list.scss\"\n\nconst chipColors = {\n  \"on hold\": \"warning\",\n  delivered: \"success\",\n  pending: \"primary\",\n  canceled: \"danger\"\n}\n\nconst selectedStyle = {\n  rows: {\n    selectedHighlighStyle: {\n      backgroundColor: \"rgba(115,103,240,.05)\",\n      color: \"#7367F0 !important\",\n      boxShadow: \"0 0 1px 0 #7367F0 !important\",\n      \"&:hover\": {\n        transform: \"translateY(0px) !important\"\n      }\n    }\n  }\n}\n\nconst ActionsComponent = props => {\n  return (\n    <div className=\"data-list-action\">\n      <Edit\n        className=\"cursor-pointer mr-1\"\n        size={20}\n        onClick={() => {\n          return props.currentData(props.row)\n        }}\n      />\n      <Trash\n        className=\"cursor-pointer\"\n        size={20}\n        onClick={() => {\n          props.deleteRow(props.row)\n        }}\n      />\n    </div>\n  )\n}\n\nconst CustomHeader = props => {\n  return (\n    <div className=\"data-list-header d-flex justify-content-between flex-wrap\">\n      <div className=\"actions-left d-flex flex-wrap\">\n        <UncontrolledDropdown className=\"data-list-dropdown mr-1\">\n          <DropdownToggle className=\"p-1\" color=\"primary\">\n            <span className=\"align-middle mr-1\">Actions</span>\n            <ChevronDown size={15} />\n          </DropdownToggle>\n          <DropdownMenu tag=\"div\" right>\n            <DropdownItem tag=\"a\">Delete</DropdownItem>\n            <DropdownItem tag=\"a\">Archive</DropdownItem>\n            <DropdownItem tag=\"a\">Print</DropdownItem>\n            <DropdownItem tag=\"a\">Export</DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n        <Button\n          className=\"add-new-btn\"\n          color=\"primary\"\n          onClick={() => props.handleSidebar(true, true)}\n          outline>\n          <Plus size={15} />\n          <span className=\"align-middle\">Add New</span>\n        </Button>\n      </div>\n      <div className=\"actions-right d-flex flex-wrap mt-sm-0 mt-2\">\n        <UncontrolledDropdown className=\"data-list-rows-dropdown mr-1 d-md-block d-none\">\n          <DropdownToggle color=\"\" className=\"sort-dropdown\">\n            <span className=\"align-middle mx-50\">\n              {`${props.index[0]} - ${props.index[1]} of ${props.total}`}\n            </span>\n            <ChevronDown size={15} />\n          </DropdownToggle>\n          <DropdownMenu tag=\"div\" right>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(4)}>\n              4\n            </DropdownItem>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(10)}>\n              10\n            </DropdownItem>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(15)}>\n              15\n            </DropdownItem>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(20)}>\n              20\n            </DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n        <div className=\"filter-section\">\n          <Input type=\"text\" onChange={e => props.handleFilter(e)} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nclass DataListConfig extends Component {\n  static getDerivedStateFromProps(props, state) {\n    if (\n      props.dataList.data.length !== state.data.length ||\n      state.currentPage !== props.parsedFilter.page\n    ) {\n      return {\n        data: props.dataList.data,\n        allData: props.dataList.filteredData,\n        totalPages: props.dataList.totalPages,\n        currentPage: parseInt(props.parsedFilter.page) - 1,\n        rowsPerPage: parseInt(props.parsedFilter.perPage),\n        totalRecords: props.dataList.totalRecords,\n        sortIndex: props.dataList.sortIndex\n      }\n    }\n\n    // Return null if the state hasn't changed\n    return null\n  }\n\n  state = {\n    data: [],\n    totalPages: 0,\n    currentPage: 0,\n    columns: [\n      {\n        name: \"Name\",\n        selector: \"name\",\n        sortable: true,\n        minWidth: \"300px\",\n        cell: row => (\n          <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\n            {row.name}\n          </p>\n        )\n      },\n      {\n        name: \"Category\",\n        selector: \"category\",\n        sortable: true\n      },\n      {\n        name: \"Popularity\",\n        selector: \"popularity\",\n        sortable: true,\n        cell: row => (\n          <Progress\n            className=\"w-100 mb-0\"\n            color={row.popularity.color}\n            value={row.popularity.popValue}\n          />\n        )\n      },\n      {\n        name: \"Order Status\",\n        selector: \"order_status\",\n        sortable: true,\n        cell: row => (\n          <Chip\n            className=\"m-0\"\n            color={chipColors[row.order_status]}\n            text={row.order_status}\n          />\n        )\n      },\n      {\n        name: \"Price\",\n        selector: \"price\",\n        sortable: true,\n        cell: row => `$${row.price}`\n      },\n      {\n        name: \"Actions\",\n        sortable: true,\n        cell: row => (\n          <ActionsComponent\n            row={row}\n            getData={this.props.getData}\n            parsedFilter={this.props.parsedFilter}\n            currentData={this.handleCurrentData}\n            deleteRow={this.handleDelete}\n          />\n        )\n      }\n    ],\n    allData: [],\n    value: \"\",\n    rowsPerPage: 4,\n    sidebar: false,\n    currentData: null,\n    selected: [],\n    totalRecords: 0,\n    sortIndex: [],\n    addNew: \"\"\n  }\n\n  thumbView = this.props.thumbView\n\n  componentDidMount() {\n    this.props.getData(this.props.parsedFilter)\n    this.props.getInitialData()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.thumbView) {\n      this.thumbView = false\n      let columns = [\n        {\n          name: \"Image\",\n          selector: \"img\",\n          minWidth: \"220px\",\n          cell: row => <img src={row.img} height=\"100\" alt={row.name} />\n        },\n        {\n          name: \"Name\",\n          selector: \"name\",\n          sortable: true,\n          minWidth: \"250px\",\n          cell: row => (\n            <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\n              {row.name}\n            </p>\n          )\n        },\n        {\n          name: \"Category\",\n          selector: \"category\",\n          sortable: true\n        },\n        {\n          name: \"Popularity\",\n          selector: \"popularity\",\n          sortable: true,\n          cell: row => (\n            <Progress\n              className=\"w-100 mb-0\"\n              color={row.popularity.color}\n              value={row.popularity.popValue}\n            />\n          )\n        },\n        {\n          name: \"Order Status\",\n          selector: \"order_status\",\n          sortable: true,\n          cell: row => (\n            <Chip\n              className=\"m-0\"\n              color={chipColors[row.order_status]}\n              text={row.order_status}\n            />\n          )\n        },\n        {\n          name: \"Price\",\n          selector: \"price\",\n          sortable: true,\n          cell: row => `$${row.price}`\n        },\n        {\n          name: \"Actions\",\n          sortable: true,\n          cell: row => (\n            <ActionsComponent\n              row={row}\n              getData={this.props.getData}\n              parsedFilter={this.props.parsedFilter}\n              currentData={this.handleCurrentData}\n              deleteRow={this.handleDelete}\n            />\n          )\n        }\n      ]\n      this.setState({ columns })\n    }\n  }\n\n  handleFilter = e => {\n    this.setState({ value: e.target.value })\n    this.props.filterData(e.target.value)\n  }\n\n  handleRowsPerPage = value => {\n    let { parsedFilter, getData } = this.props\n    let page = parsedFilter.page !== undefined ? parsedFilter.page : 1\n    history.push(`/data-list/list-view?page=${page}&perPage=${value}`)\n    this.setState({ rowsPerPage: value })\n    getData({ page: parsedFilter.page, perPage: value })\n  }\n\n  handleSidebar = (boolean, addNew = false) => {\n    this.setState({ sidebar: boolean })\n    if (addNew === true) this.setState({ currentData: null, addNew: true })\n  }\n\n  handleDelete = row => {\n    this.props.deleteData(row)\n    this.props.getData(this.props.parsedFilter)\n    if (this.state.data.length - 1 === 0) {\n      let urlPrefix = this.props.thumbView\n        ? \"/data-list/thumb-view/\"\n        : \"/data-list/list-view/\"\n      history.push(\n        `${urlPrefix}list-view?page=${parseInt(\n          this.props.parsedFilter.page - 1\n        )}&perPage=${this.props.parsedFilter.perPage}`\n      )\n      this.props.getData({\n        page: this.props.parsedFilter.page - 1,\n        perPage: this.props.parsedFilter.perPage\n      })\n    }\n  }\n\n  handleCurrentData = obj => {\n    this.setState({ currentData: obj })\n    this.handleSidebar(true)\n  }\n\n  handlePagination = page => {\n    let { parsedFilter, getData } = this.props\n    let perPage = parsedFilter.perPage !== undefined ? parsedFilter.perPage : 4\n    let urlPrefix = this.props.thumbView\n      ? \"/data-list/thumb-view/\"\n      : \"/data-list/list-view/\"\n    history.push(\n      `${urlPrefix}list-view?page=${page.selected + 1}&perPage=${perPage}`\n    )\n    getData({ page: page.selected + 1, perPage: perPage })\n    this.setState({ currentPage: page.selected })\n  }\n\n  render() {\n    let {\n      columns,\n      data,\n      allData,\n      totalPages,\n      value,\n      rowsPerPage,\n      currentData,\n      sidebar,\n      totalRecords,\n      sortIndex\n    } = this.state\n    return (\n      <div\n        className={`data-list ${\n          this.props.thumbView ? \"thumb-view\" : \"list-view\"\n        }`}>\n        <DataTable\n          columns={columns}\n          data={value.length ? allData : data}\n          pagination\n          paginationServer\n          paginationComponent={() => (\n            <ReactPaginate\n              previousLabel={<ChevronLeft size={15} />}\n              nextLabel={<ChevronRight size={15} />}\n              breakLabel=\"...\"\n              breakClassName=\"break-me\"\n              pageCount={totalPages}\n              containerClassName=\"vx-pagination separated-pagination pagination-end pagination-sm mb-0 mt-2\"\n              activeClassName=\"active\"\n              forcePage={\n                this.props.parsedFilter.page\n                  ? parseInt(this.props.parsedFilter.page - 1)\n                  : 0\n              }\n              onPageChange={page => this.handlePagination(page)}\n            />\n          )}\n          noHeader\n          subHeader\n          selectableRows\n          responsive\n          pointerOnHover\n          selectableRowsHighlight\n          onSelectedRowsChange={data =>\n            this.setState({ selected: data.selectedRows })\n          }\n          customStyles={selectedStyle}\n          subHeaderComponent={\n            <CustomHeader\n              handleSidebar={this.handleSidebar}\n              handleFilter={this.handleFilter}\n              handleRowsPerPage={this.handleRowsPerPage}\n              rowsPerPage={rowsPerPage}\n              total={totalRecords}\n              index={sortIndex}\n            />\n          }\n          sortIcon={<ChevronDown />}\n          selectableRowsComponent={Checkbox}\n          selectableRowsComponentProps={{\n            color: \"primary\",\n            icon: <Check className=\"vx-icon\" size={12} />,\n            label: \"\",\n            size: \"sm\"\n          }}\n        />\n        <Sidebar\n          show={sidebar}\n          data={currentData}\n          updateData={this.props.updateData}\n          addData={this.props.addData}\n          handleSidebar={this.handleSidebar}\n          thumbView={this.props.thumbView}\n          getData={this.props.getData}\n          dataParams={this.props.parsedFilter}\n          addNew={this.state.addNew}\n        />\n        <div\n          className={classnames(\"data-list-overlay\", {\n            show: sidebar\n          })}\n          onClick={() => this.handleSidebar(false, true)}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dataList: state.dataList\n  }\n}\n\nexport default connect(mapStateToProps, {\n  getData,\n  deleteData,\n  updateData,\n  addData,\n  getInitialData,\n  filterData\n})(DataListConfig)\n","import React from \"react\"\nclass CheckBoxesVuexy extends React.Component {\n  render() {\n    return (\n      <div\n        className={`vx-checkbox-con ${\n          this.props.className ? this.props.className : \"\"\n        } vx-checkbox-${this.props.color}`}\n      >\n        <input\n          type=\"checkbox\"\n          defaultChecked={this.props.defaultChecked}\n          checked={this.props.checked}\n          value={this.props.value}\n          disabled={this.props.disabled}\n          onClick={this.props.onClick ? this.props.onClick : null}\n          onChange={this.props.onChange ? this.props.onChange : null}\n        />\n        <span\n          className={`vx-checkbox vx-checkbox-${\n            this.props.size ? this.props.size : \"md\"\n          }`}\n        >\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\n        </span>\n        <span>{this.props.label}</span>\n      </div>\n    )\n  }\n}\n\nexport default CheckBoxesVuexy\n","import React from \"react\"\nimport { X } from \"react-feather\"\nclass Chip extends React.Component {\n  closeChip = e => {\n    e.target.closest(\".chip\").remove()\n  }\n\n  render() {\n    return (\n      <div\n        className={`chip ${this.props.className} ${\n          this.props.color ? `chip-${this.props.color}` : null\n        }`}\n      >\n        <div className=\"chip-body\">\n          {(!this.props.avatarImg && this.props.avatarText) ||\n          (!this.props.avatarImg && this.props.avatarIcon) ? (\n            <div\n              className={`avatar ${\n                this.props.avatarColor ? `bg-${this.props.avatarColor}` : null\n              }`}\n            >\n              <div className=\"avatar-content\">\n                {this.props.avatarText ? this.props.avatarText : null}\n                {this.props.avatarIcon ? this.props.avatarIcon : null}\n              </div>\n            </div>\n          ) : this.props.avatarImg ? (\n            <div className=\"avatar\">\n              <img\n                src={this.props.avatarImg}\n                alt=\"chipImg\"\n                height=\"20\"\n                width=\"20\"\n              />\n            </div>\n          ) : null}\n          <div className=\"chip-text\">{this.props.text}</div>\n          {this.props.closable ? (\n            <div className=\"chip-closable\" onClick={e => this.closeChip(e)}>\n              {this.props.closableIcon ? this.props.closableIcon : <X />}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Chip\n"],"sourceRoot":""}