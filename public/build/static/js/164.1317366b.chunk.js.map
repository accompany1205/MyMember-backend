{"version":3,"sources":["views/pages/myMoney/finance/ccexpiring/ccexpiringMain.js","redux/actions/mymoney/index.js"],"names":["UrgentCallList","state","rowData","pageSize","isVisible","reload","collapse","status","role","selectStatus","verified","department","defaultColDef","sortable","resizable","searchVal","columnDefs","headerName","field","filter","width","cellRendererFramework","params","className","console","log","firstName","getRowHeight","onGridReady","gridApi","api","gridColumnApi","columnApi","filterData","column","val","modelObj","type","getFilterInstance","setModel","onFilterChanged","filterSize","paginationSetPageSize","Number","setState","updateSearchQuery","setQuickFilter","refreshCard","setTimeout","toggleCollapse","onEntered","onEntering","onExiting","onExited","removeCard","this","props","CCExpiringList","prevProps","ccExpirylist","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","tag","size","right","onClick","placeholder","onChange","e","target","value","Consumer","context","rowSelection","colResizeDefault","animateRows","pagination","pivotPanelShow","paginationPageSize","enableRtl","direction","React","Component","connect","mymoney","monthlyCCexpiryList","baseUrl","process","GetExpenseList","dispatch","a","axios","get","localStorage","getItem","headers","response","data","payload","CREATE_EXPENSE","formData","FormData","Object","entries","map","v","i","append","post","message","trashExpense","id","delete","then","res","ExpenseCategoryList","CREATE_EXPENSE_CATEGORY","task","editExpenseCategory","put","trashCategory","GetMonthlyPaymentList","ExpenseBreakDownList","GetAllEmailList","moveMail","GetFolderList"],"mappings":"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","file":"static/js/164.1317366b.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem\r\n} from \"reactstrap\"\r\nimport { ContextLayout } from \"../../../../../utility/context/Layout\"\r\nimport { CCExpiringList } from '../../../../../redux/actions/mymoney/index';\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { ChevronDown } from \"react-feather\";\r\nimport { connect } from 'react-redux';\r\nimport Breadcrumbs from \"../../../../../components/@vuexy/breadCrumbs/BreadCrumb\"\r\nimport \"../../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\"\r\nimport \"../../../../../assets/scss/pages/users.scss\"\r\nclass UrgentCallList extends React.Component {\r\n  state = {\r\n    rowData: null,\r\n    pageSize: 20,\r\n    isVisible: true,\r\n    reload: false,\r\n    collapse: true,\r\n    status: \"Opened\",\r\n    role: \"All\",\r\n    selectStatus: \"All\",\r\n    verified: \"All\",\r\n    department: \"All\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      resizable: true\r\n    },\r\n    searchVal: \"\",\r\n    columnDefs: [\r\n\r\n      {\r\n        headerName: \"First Name\",\r\n        field: \"firstName\",\r\n        filter: false,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n\r\n          return (\r\n\r\n\r\n            <div className=\"\">\r\n              {console.log(params)}\r\n              <span>{params.firstName}</span>\r\n            </div>\r\n          )\r\n        }\r\n\r\n      },\r\n      {\r\n        headerName: \"Last Name\",\r\n        field: \"lastName\",\r\n        filter: false,\r\n        width: 160\r\n      },\r\n      {\r\n        headerName: \"Primary Phone\",\r\n        field: \"primaryPhone\",\r\n        filter: false,\r\n        width: 150\r\n      },\r\n      {\r\n        headerName: \"Email\",\r\n        field: \"email\",\r\n        filter: false,\r\n        width: 150\r\n      },\r\n      {\r\n        headerName: \"Expiry Date\",\r\n        field: \"cardExpiry\",\r\n        filter: false,\r\n        width: 160\r\n      },\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"\",\r\n        filter: false,\r\n        width: 150,\r\n\r\n\r\n      },\r\n      {\r\n        headerName: \"Password\",\r\n        field: \"password\",\r\n        filter: false,\r\n        width: 150\r\n      },\r\n\r\n\r\n      // {\r\n      //   headerName: \"Manage\",\r\n      //   field: \"\",\r\n      //   filter: false,\r\n      //   width: 150,\r\n      //   cellRendererFramework: this.renderButton.bind(this)\r\n      // },\r\n      // {\r\n      //     headerName: \"Result\",\r\n      //     field: \"\",\r\n      //     filter: false,\r\n      //     width: 150\r\n      // },\r\n    ],\r\n    getRowHeight: function (params) {\r\n      return 70;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.CCExpiringList();\r\n  }\r\n\r\n  // renderButton(params) {\r\n  //   // console.log(\"????\",params.data[\"_id\"]);\r\n  //   return (\r\n  //     <>\r\n  //     <Trash2   \r\n  //       className=\"mr-50\"\r\n  //       size={18}\r\n  //       onClick={() =>\r\n  //         this.props.trashSubUser(params.data[\"_id\"])\r\n  //       }\r\n  //     />\r\n  //     <Edit  \r\n  //       className=\"mr-50\"\r\n  //       size={18} \r\n  //       />\r\n  //     </>\r\n\r\n  //   );\r\n  // }\r\n  componentDidUpdate(prevProps) {\r\n    console.log(\"???????????????\", this.props.ccExpirylist)\r\n\r\n    if (prevProps.ccExpirylist !== this.props.ccExpirylist) {\r\n      this.setState({\r\n        rowData: this.props.ccExpirylist\r\n      })\r\n    }\r\n  }\r\n  onGridReady = params => {\r\n    this.gridApi = params.api\r\n    this.gridColumnApi = params.columnApi\r\n  }\r\n\r\n  filterData = (column, val) => {\r\n    var filter = this.gridApi.getFilterInstance(column)\r\n    var modelObj = null\r\n    if (val !== \"all\") {\r\n      modelObj = {\r\n        type: \"equals\",\r\n        filter: val\r\n      }\r\n    }\r\n    filter.setModel(modelObj)\r\n    this.gridApi.onFilterChanged()\r\n  }\r\n\r\n  filterSize = val => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val))\r\n      this.setState({\r\n        pageSize: val\r\n      })\r\n    }\r\n  }\r\n  updateSearchQuery = val => {\r\n    this.gridApi.setQuickFilter(val)\r\n    this.setState({\r\n      searchVal: val\r\n    })\r\n  }\r\n\r\n  refreshCard = () => {\r\n    this.setState({ reload: true })\r\n    setTimeout(() => {\r\n      this.setState({\r\n        reload: false,\r\n        role: \"All\",\r\n        selectStatus: \"All\",\r\n        verified: \"All\",\r\n        department: \"All\"\r\n      })\r\n    }, 500)\r\n  }\r\n\r\n  toggleCollapse = () => {\r\n    this.setState(state => ({ collapse: !state.collapse }))\r\n  }\r\n  onEntered = () => {\r\n    this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = () => {\r\n    this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onEntered = () => {\r\n    this.setState({ status: \"Opened\" })\r\n  }\r\n  onExiting = () => {\r\n    this.setState({ status: \"Closing...\" })\r\n  }\r\n  onExited = () => {\r\n    this.setState({ status: \"Closed\" })\r\n  }\r\n  removeCard = () => {\r\n    this.setState({ isVisible: false })\r\n  }\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef, pageSize } = this.state\r\n    return (\r\n      <React.Fragment>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Finance\"\r\n          breadCrumbParent=\"My Money\"\r\n          breadCrumbActive=\"CC Expiring\"\r\n        />\r\n        <Row className=\"app-user-list\">\r\n\r\n          <Col sm=\"12\">\r\n            <Card>\r\n              <CardBody>\r\n                <div className=\"ag-theme-material ag-grid-table\">\r\n                  <div className=\"ag-grid-actions d-flex justify-content-between flex-wrap mb-1\">\r\n                    <div className=\"sort-dropdown\">\r\n                      <UncontrolledDropdown className=\"ag-dropdown p-1\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          1 - {pageSize} of 150\r\n                      <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                      </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                      </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                      </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(150)}\r\n                          >\r\n                            150\r\n                      </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"filter-actions d-flex\">\r\n                      <Input\r\n                        className=\"w-70 mr-1 mb-1 mb-sm-0\"\r\n                        type=\"text\"\r\n                        placeholder=\"search...\"\r\n                        onChange={e => this.updateSearchQuery(e.target.value)}\r\n                        value={this.state.searchVal}\r\n                      />\r\n\r\n                    </div>\r\n                  </div>\r\n                  {/* {console.log(\">>>>432\", this.state.rowData)} */}\r\n                  {this.state.rowData !== null ? (\r\n                    <ContextLayout.Consumer>\r\n                      {context => (\r\n                        <AgGridReact\r\n\r\n                          // gridOptions={{}}\r\n                          rowSelection=\"multiple\"\r\n                          defaultColDef={defaultColDef}\r\n                          columnDefs={columnDefs}\r\n                          rowData={rowData}\r\n                          onGridReady={this.onGridReady}\r\n                          colResizeDefault={\"shift\"}\r\n                          animateRows={true}\r\n                          pagination={true}\r\n                          pivotPanelShow=\"always\"\r\n                          paginationPageSize={pageSize}\r\n                          resizable={true}\r\n                          getRowHeight={this.state.getRowHeight}\r\n                          enableRtl={context.state.direction === \"rtl\"}\r\n                        />\r\n                      )}\r\n                    </ContextLayout.Consumer>\r\n                  ) : null}\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ccExpirylist: state.mymoney.monthlyCCexpiryList,\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { CCExpiringList })(UrgentCallList)","import axios from 'axios';\nconst baseUrl = process.env.REACT_APP_BASE_URL;\n\n\n\nexport const GetExpenseList = () => {\n  return async dispatch => {\n      try{\n          let response = await axios.get(`${baseUrl}/api/list_of_expenses/${localStorage.getItem(\"user_id\")}`, \n          {headers : {\n              \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`}});\n          if(response.data && response.status === 200){\n              dispatch({\n                  type : \"GET_EXP_LIST\",\n                  payload : response.data\n              })\n           }\n      }\n      catch(error){\n          console.log(\"something went wrong\");\n      }\n  }\n}\nexport const CREATE_EXPENSE = (data) => {\n  let formData = new FormData()\n  let dataEntries  = Object.entries(data);\n  dataEntries.map((v,i) => {\n      formData.append(v[0], v[1]);\n      return v;\n  })\n  return async dispatch => {\n      try{\n        let response = await axios.post(`${baseUrl}/api/add_expenses/${localStorage.getItem(\"user_id\")}`, formData, {\n            headers : {\n                \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`,\n                \"content-type\" : \"multipart/form-data\",\n            }\n        })\n        if(response.data && response.status === 200){\n            console.log(response.data);\n            dispatch(GetExpenseList());\n        }\n      }\n      catch(error){\n          console.log(error?.message);\n          dispatch(GetExpenseList());\n      }\n  }\n}\n\nexport const trashExpense = (id) => {\n  // console.log(\">>>>>>>>>>\",id)\n  return dispatch => {\n    axios.delete(`${baseUrl}/api/delete_expenses/${localStorage.getItem(\"user_id\")}/${id}`, {\n      headers : {\n        \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`\n      }\n    }).then(res => {\n      dispatch(GetExpenseList());\n    })\n    \n  }\n}\n/*************************************expense category ********************* */\nexport const ExpenseCategoryList = () => {\n    return async dispatch => {\n        try{\n            let response = await axios.get(`${baseUrl}/api/expenses/list_category/${localStorage.getItem(\"user_id\")}`, \n            {headers : {\n                \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`}});\n            if(response.data && response.status === 200){\n                dispatch({\n                    type : \"GET_EXP_CATEGORY_LIST\",\n                    payload : response.data\n                })\n             }\n        }\n        catch(error){\n            console.log(\"something went wrong\");\n        }\n    }\n}\n\n\nexport const CREATE_EXPENSE_CATEGORY = task => {\n    return dispatch => {\n       axios.post(`${baseUrl}/api/expenses/add_category/${localStorage.getItem(\"user_id\")}`, {...task}, {\n        headers : {\n          \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`\n        }\n      }).then(res => {\n        dispatch(ExpenseCategoryList());\n      })\n    }\n  }\n  // export const editExpenseCategory  = (id, data) => {\n  //   return dispatch => {\n  //      axios.put(`${baseUrl}/api/expenses/update_category/${localStorage.getItem(\"user_id\")}/${id}`, data, {\n  //       headers : {\n  //         \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`,\n  //         \"content-type\" : \"application/json\",\n  //       }\n  //     }).then(res => {\n  //       dispatch(ExpenseCategoryList());\n  //     })\n  //   }\n  // }\nexport const editExpenseCategory = (data,id) => {\n    return async dispatch => {\n        try{\n            \n                let response = await axios.put(`${baseUrl}/api/expenses/update_category/${localStorage.getItem(\"user_id\")}/${id}`, data, {\n                    headers : {\n                        \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`,\n                        \"content-type\" : \"application/json\",\n                    }\n                })\n                console.log(response);\n                if(response.data && response.status === 200){\n                    dispatch(ExpenseCategoryList())\n                }\n            \n        }\n        catch(error){\n            console.log(error);\n        }\n    }\n} \n  \n  \n\n  \n  export const trashCategory = (id) => {\n    return dispatch => {\n      axios.delete(`${baseUrl}/api/expenses/remove_category/${localStorage.getItem(\"user_id\")}/${id}`, {\n        headers : {\n          \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`\n        }\n      }).then(res => {\n        dispatch(ExpenseCategoryList());\n      })\n      \n    }\n  }\n\n\n\n/**********************************finance mymoney********************************* */\nexport const GetMonthlyPaymentList = () => {\n  return async dispatch => {\n      try{\n          let response = await axios.get(`${baseUrl}/api/finance/monthly_pay_list/${localStorage.getItem(\"user_id\")}`, \n          {headers : {\n              \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`}});\n          if(response.data && response.status === 200){\n              dispatch({\n                  type : \"GET_MONTHLY_PAYMENTS_LIST\",\n                  payload : response.data\n              })\n           }\n      }\n      catch(error){\n          console.log(\"something went wrong\");\n      }\n  }\n}\n\nexport const ExpenseBreakDownList = () => {\n  return async dispatch => {\n      try{\n        console.log(\"coming here \")\n          let response = await axios.get(`${baseUrl}/api/finance/expense_breakdown/${localStorage.getItem(\"user_id\")}`, \n          {headers : {\n              \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`}});\n          if(response.data && response.status === 200){\n              dispatch({\n                  type : \"GET_EXPENSE_BREAKDOWN_LIST\",\n                  payload : response.data\n              })\n           }\n      }\n      catch(error){\n          console.log(\"something went wrong\");\n      }\n  }\n}\n\nexport const CCExpiringList = () => {\n  return async dispatch => {\n      try{\n          let response = await axios.get(`${baseUrl}/api/finance/cc_expire/${localStorage.getItem(\"user_id\")}`, \n          {headers : {\n              \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`}});\n          if(response.data && response.status === 200){\n              dispatch({\n                  type : \"GET_MONTHLY_CCExpiring\",\n                  payload : response.data\n              })\n           }\n      }\n      catch(error){\n          console.log(error);\n      }\n  }\n}\n\n\n  \n/**************************************************************marketing ************************** */\n\nexport const GetAllEmailList = () => {\n  return async dispatch => {\n      try{\n          let response = await axios.get(`${baseUrl}/api/all_email_list/${localStorage.getItem(\"user_id\")}`, \n          {headers : {\n              \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`}});\n          if(response.data && response.status === 200){\n              dispatch({\n                  type : \"GET_ALL_EMAIL_LIST\",\n                  payload : response.data\n              })\n           }\n      }\n      catch(error){\n          console.log(\"something went wrong\");\n      }\n  }\n}\n\nexport const SENT_EMAIL_COMPOSE = task => {\n  \n  return async dispatch => {\n    console.log(task);\n    let response = await axios.post(`${baseUrl}/api/email_compose/send_email/${localStorage.getItem(\"user_id\")}`, {...task}, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`,\n        'content-type': 'application/json'\n      }\n    })\n    if(response.data && response.status === 200){\n      console.log(response.data,\"send email\");\n    }\n    else{\n      console.log(\"Something went wrong\");\n    }\n  }\n}\n\nexport const moveMail = (id) => {\n  return dispatch => {\n    // console.log(\"hey there i ma coming>>>>>\",id)\n    axios.delete(`${baseUrl}/api/email_compose/remove_template/${localStorage.getItem(\"user_id\")}/${id}`, {\n      headers : {\n        \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`\n      }\n    }).then(res => {\n      dispatch(GetAllEmailList());\n    })\n    \n  }\n}\n\nexport const CREATE_FOLDER_CATEGORY = task => {\n  return dispatch => {\n     axios.post(`${baseUrl}/api/email_compose/addCategory/${localStorage.getItem(\"user_id\")}`, {...task}, {\n      headers : {\n        \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`\n      }\n    }).then(res => {\n      dispatch(GetFolderList());\n    })\n  }\n}\nexport const GetFolderList = () => {\n  return async dispatch => {\n      try{\n          let response = await axios.get(`${baseUrl}/api/email_compose/category_list/${localStorage.getItem(\"user_id\")}`, \n          {headers : {\n              \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`}});\n          if(response.data && response.status === 200){\n              dispatch({\n                  type : \"GET_FOLDER_LIST\",\n                  payload : response.data\n              })\n           }\n      }\n      catch(error){\n          console.log(\"something went wrong\");\n      }\n  }\n}\n"],"sourceRoot":""}