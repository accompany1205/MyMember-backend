{"version":3,"sources":["views/pages/marketing/email/sent/sentEmail.js","redux/actions/mymoney/index.js"],"names":["UsersLists","state","rowData","pageSize","isVisible","reload","collapse","status","role","selectStatus","verified","department","loading","defaultColDef","sortable","resizable","searchVal","columnDefs","headerName","field","width","cellRendererFramework","params","className","href","size","getRowHeight","onGridReady","gridApi","api","gridColumnApi","columnApi","filterData","column","val","modelObj","type","filter","getFilterInstance","setModel","onFilterChanged","filterSize","paginationSetPageSize","Number","setState","updateSearchQuery","setQuickFilter","refreshCard","setTimeout","toggleCollapse","onEntered","onEntering","onExiting","onExited","removeCard","this","props","GetAllEmailList","prevProps","console","log","emailList","sm","tag","right","onClick","placeholder","onChange","e","target","value","id","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","paginationPageSize","enableRtl","direction","React","Component","connect","mymoney","allEmailList","baseUrl","process","GetExpenseList","dispatch","a","axios","get","localStorage","getItem","headers","response","data","payload","CREATE_EXPENSE","formData","FormData","Object","entries","map","v","i","append","post","message","trashExpense","delete","then","res","ExpenseCategoryList","CREATE_EXPENSE_CATEGORY","task","editExpenseCategory","put","trashCategory","GetMonthlyPaymentList","ExpenseBreakDownList","CCExpiringList","moveMail","GetFolderList"],"mappings":"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","file":"static/js/163.5277dab3.chunk.js","sourcesContent":["import React from \"react\"\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Input,\n  Row,\n  Col,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  Button\n\n} from \"reactstrap\"\nimport { ContextLayout } from \"../../../../../utility/context/Layout\"\nimport { GetAllEmailList } from '../../../../../redux/actions/mymoney/index';\nimport { connect } from 'react-redux';\nimport { AgGridReact } from \"ag-grid-react\"\nimport {\n\n  ChevronDown,\n  Edit\n} from \"react-feather\"\nimport \"../../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\"\nimport \"../../../../../assets/scss/pages/users.scss\"\nimport Spinner from \"../../../../../components/@vuexy/spinner/Loading-spinner\"\n\n\nclass UsersLists extends React.Component {\n  state = {\n    rowData: null,\n    pageSize: 20,\n    isVisible: true,\n    reload: false,\n    collapse: true,\n    status: \"Opened\",\n    role: \"All\",\n    selectStatus: \"All\",\n    verified: \"All\",\n    department: \"All\",\n    loading: true,\n    defaultColDef: {\n      sortable: true,\n      resizable: true\n    },\n    searchVal: \"\",\n    columnDefs: [\n     \n        {\n        headerName: \"Date\",\n        field: \"sent_date\",\n        width: 130,\n        },\n      {\n        headerName: \"From\",\n        field: \"from\",\n        // cellRendererFramework: params => {\n        //   return (\n        //     <div className=\"d-flex align-items-center cursor-pointer\">\n        //       <span>{params.data.category}</span>\n             \n        //     </div>\n        //   )\n        // }\n      },\n\n      {\n        headerName: \"Sent To\",\n        field: \"to\",\n        // cellRendererFramework: params => {\n        //   return (\n        //     <div className=\"d-flex align-items-center cursor-pointer\">\n        //       <span>{params}</span>\n             \n        //     </div>\n        //   )\n        // }\n      },\n\n      {\n        headerName: \"Subject\",\n        field: \"subject\",\n        // width: 180,\n      },\n      {\n        headerName: \"Category\",\n        field: \"category\",\n        width: 120,\n      },\n      \n      \n      {\n        headerName: \"Status\",\n        field: \"email_type\",\n        width: 150,\n      },\n      {\n        headerName: \"View\",\n        field: \"transactions\",\n        width: 150,\n        cellRendererFramework: params => {\n          return (\n            <div className=\"actions cursor-pointer\">\n               <a href=\"/email/sent\">\n               <Edit\n                className=\"mr-50\"\n                size={16}\n              />   \n                </a> \n             \n\n            </div>\n          )\n        }\n      }\n    ],\n    getRowHeight: function (params) {\n      return 70;\n    }\n  }\n\n  componentDidMount() {\n\n    this.props.GetAllEmailList();\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(\"}}}}\",this.props.emailList)\n    // this.props.emailList.map((item,i)=>\n    // {\n    //   console.log(\"}}}}\",item)\n    //   if (prevProps.emailList !== this.props.emailList) {\n    //     this.setState({\n    //       rowData: item,\n    //       loading: false\n         \n    //     })\n    //   }\n    // })\n    if (prevProps.emailList !== this.props.emailList) {\n        this.setState({\n          rowData: this.props.emailList,\n          loading: false\n         \n        })\n      }\n\n   \n  }\n\n  onGridReady = params => {\n    this.gridApi = params.api\n    this.gridColumnApi = params.columnApi\n  }\n\n  filterData = (column, val) => {\n    var filter = this.gridApi.getFilterInstance(column)\n    var modelObj = null\n    if (val !== \"all\") {\n      modelObj = {\n        type: \"equals\",\n        filter: val\n      }\n    }\n    filter.setModel(modelObj)\n    this.gridApi.onFilterChanged()\n  }\n\n  filterSize = val => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val))\n      this.setState({\n        pageSize: val\n      })\n    }\n  }\n  updateSearchQuery = val => {\n    this.gridApi.setQuickFilter(val)\n    this.setState({\n      searchVal: val\n    })\n  }\n\n  refreshCard = () => {\n    this.setState({ reload: true })\n    setTimeout(() => {\n      this.setState({\n        reload: false,\n        role: \"All\",\n        selectStatus: \"All\",\n        verified: \"All\",\n        department: \"All\"\n      })\n    }, 500)\n  }\n\n  toggleCollapse = () => {\n    this.setState(state => ({ collapse: !state.collapse }))\n  }\n  onEntered = () => {\n    this.setState({ status: \"Opened\" })\n  }\n  onEntering = () => {\n    this.setState({ status: \"Opening...\" })\n  }\n\n  onEntered = () => {\n    this.setState({ status: \"Opened\" })\n  }\n  onExiting = () => {\n    this.setState({ status: \"Closing...\" })\n  }\n  onExited = () => {\n    this.setState({ status: \"Closed\" })\n  }\n  removeCard = () => {\n    this.setState({ isVisible: false })\n  }\n\n  render() {\n    const { rowData, columnDefs, defaultColDef, pageSize } = this.state\n    return (\n      <Row className=\"app-user-list\">\n\n\n        <Col sm=\"12\">\n\n          <Card>\n           \n            <CardBody>\n              <div className=\"ag-theme-material ag-grid-table\">\n                <div className=\"ag-grid-actions d-flex justify-content-between flex-wrap mb-1\">\n                  <div className=\"sort-dropdown\">\n                    <UncontrolledDropdown className=\"ag-dropdown p-1\">\n                      <DropdownToggle tag=\"div\">\n                        1 - {pageSize} of 150\n                        <ChevronDown className=\"ml-50\" size={15} />\n                      </DropdownToggle>\n                      <DropdownMenu right>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(20)}\n                        >\n                          20\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(50)}\n                        >\n                          50\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(100)}\n                        >\n                          100\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(150)}\n                        >\n                          150\n                        </DropdownItem>\n                      </DropdownMenu>\n                    </UncontrolledDropdown>\n                  </div>\n                  <div className=\"filter-actions d-flex\">\n                    <Input\n                      className=\"w-70 mr-1 mb-1 mb-sm-0\"\n                      type=\"text\"\n                      placeholder=\"search...\"\n                      onChange={e => this.updateSearchQuery(e.target.value)}\n                      value={this.state.searchVal}\n                    />\n                  </div>\n                </div>\n                {!this.state.loading ? (\n                  <>\n                {this.state.rowData !== null ? (\n                  <ContextLayout.Consumer>\n                    {context => (\n                      <AgGridReact\n\n                        gridOptions={{}}\n                        rowSelection=\"multiple\"\n                        defaultColDef={defaultColDef}\n                        columnDefs={columnDefs}\n                        rowData={rowData}\n                        onGridReady={this.onGridReady}\n                        colResizeDefault={\"shift\"}\n                        animateRows={true}\n                        floatingFilter={false}\n                        pagination={true}\n                        pivotPanelShow=\"always\"\n                        paginationPageSize={pageSize}\n                        resizable={true}\n                        getRowHeight={this.state.getRowHeight}\n                        enableRtl={context.state.direction === \"rtl\"}\n                      />\n                    )}\n                  </ContextLayout.Consumer>\n                ) : null}\n               \n               </> ):( <div id=\"loading-bar\">\n           \n            <Spinner loading={true}/>\n          </div>\n          )}\n              </div>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    emailList: state.mymoney.allEmailList\n  }\n}\n\nexport default connect(mapStateToProps, { GetAllEmailList })(UsersLists)\n","import axios from 'axios';\nconst baseUrl = process.env.REACT_APP_BASE_URL;\n\n\n\nexport const GetExpenseList = () => {\n  return async dispatch => {\n      try{\n          let response = await axios.get(`${baseUrl}/api/list_of_expenses/${localStorage.getItem(\"user_id\")}`, \n          {headers : {\n              \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`}});\n          if(response.data && response.status === 200){\n              dispatch({\n                  type : \"GET_EXP_LIST\",\n                  payload : response.data\n              })\n           }\n      }\n      catch(error){\n          console.log(\"something went wrong\");\n      }\n  }\n}\nexport const CREATE_EXPENSE = (data) => {\n  let formData = new FormData()\n  let dataEntries  = Object.entries(data);\n  dataEntries.map((v,i) => {\n      formData.append(v[0], v[1]);\n      return v;\n  })\n  return async dispatch => {\n      try{\n        let response = await axios.post(`${baseUrl}/api/add_expenses/${localStorage.getItem(\"user_id\")}`, formData, {\n            headers : {\n                \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`,\n                \"content-type\" : \"multipart/form-data\",\n            }\n        })\n        if(response.data && response.status === 200){\n            console.log(response.data);\n            dispatch(GetExpenseList());\n        }\n      }\n      catch(error){\n          console.log(error?.message);\n          dispatch(GetExpenseList());\n      }\n  }\n}\n\nexport const trashExpense = (id) => {\n  // console.log(\">>>>>>>>>>\",id)\n  return dispatch => {\n    axios.delete(`${baseUrl}/api/delete_expenses/${localStorage.getItem(\"user_id\")}/${id}`, {\n      headers : {\n        \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`\n      }\n    }).then(res => {\n      dispatch(GetExpenseList());\n    })\n    \n  }\n}\n/*************************************expense category ********************* */\nexport const ExpenseCategoryList = () => {\n    return async dispatch => {\n        try{\n            let response = await axios.get(`${baseUrl}/api/expenses/list_category/${localStorage.getItem(\"user_id\")}`, \n            {headers : {\n                \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`}});\n            if(response.data && response.status === 200){\n                dispatch({\n                    type : \"GET_EXP_CATEGORY_LIST\",\n                    payload : response.data\n                })\n             }\n        }\n        catch(error){\n            console.log(\"something went wrong\");\n        }\n    }\n}\n\n\nexport const CREATE_EXPENSE_CATEGORY = task => {\n    return dispatch => {\n       axios.post(`${baseUrl}/api/expenses/add_category/${localStorage.getItem(\"user_id\")}`, {...task}, {\n        headers : {\n          \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`\n        }\n      }).then(res => {\n        dispatch(ExpenseCategoryList());\n      })\n    }\n  }\n  // export const editExpenseCategory  = (id, data) => {\n  //   return dispatch => {\n  //      axios.put(`${baseUrl}/api/expenses/update_category/${localStorage.getItem(\"user_id\")}/${id}`, data, {\n  //       headers : {\n  //         \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`,\n  //         \"content-type\" : \"application/json\",\n  //       }\n  //     }).then(res => {\n  //       dispatch(ExpenseCategoryList());\n  //     })\n  //   }\n  // }\nexport const editExpenseCategory = (data,id) => {\n    return async dispatch => {\n        try{\n            \n                let response = await axios.put(`${baseUrl}/api/expenses/update_category/${localStorage.getItem(\"user_id\")}/${id}`, data, {\n                    headers : {\n                        \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`,\n                        \"content-type\" : \"application/json\",\n                    }\n                })\n                console.log(response);\n                if(response.data && response.status === 200){\n                    dispatch(ExpenseCategoryList())\n                }\n            \n        }\n        catch(error){\n            console.log(error);\n        }\n    }\n} \n  \n  \n\n  \n  export const trashCategory = (id) => {\n    return dispatch => {\n      axios.delete(`${baseUrl}/api/expenses/remove_category/${localStorage.getItem(\"user_id\")}/${id}`, {\n        headers : {\n          \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`\n        }\n      }).then(res => {\n        dispatch(ExpenseCategoryList());\n      })\n      \n    }\n  }\n\n\n\n/**********************************finance mymoney********************************* */\nexport const GetMonthlyPaymentList = () => {\n  return async dispatch => {\n      try{\n          let response = await axios.get(`${baseUrl}/api/finance/monthly_pay_list/${localStorage.getItem(\"user_id\")}`, \n          {headers : {\n              \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`}});\n          if(response.data && response.status === 200){\n              dispatch({\n                  type : \"GET_MONTHLY_PAYMENTS_LIST\",\n                  payload : response.data\n              })\n           }\n      }\n      catch(error){\n          console.log(\"something went wrong\");\n      }\n  }\n}\n\nexport const ExpenseBreakDownList = () => {\n  return async dispatch => {\n      try{\n        console.log(\"coming here \")\n          let response = await axios.get(`${baseUrl}/api/finance/expense_breakdown/${localStorage.getItem(\"user_id\")}`, \n          {headers : {\n              \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`}});\n          if(response.data && response.status === 200){\n              dispatch({\n                  type : \"GET_EXPENSE_BREAKDOWN_LIST\",\n                  payload : response.data\n              })\n           }\n      }\n      catch(error){\n          console.log(\"something went wrong\");\n      }\n  }\n}\n\nexport const CCExpiringList = () => {\n  return async dispatch => {\n      try{\n          let response = await axios.get(`${baseUrl}/api/finance/cc_expire/${localStorage.getItem(\"user_id\")}`, \n          {headers : {\n              \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`}});\n          if(response.data && response.status === 200){\n              dispatch({\n                  type : \"GET_MONTHLY_CCExpiring\",\n                  payload : response.data\n              })\n           }\n      }\n      catch(error){\n          console.log(error);\n      }\n  }\n}\n\n\n  \n/**************************************************************marketing ************************** */\n\nexport const GetAllEmailList = () => {\n  return async dispatch => {\n      try{\n          let response = await axios.get(`${baseUrl}/api/all_email_list/${localStorage.getItem(\"user_id\")}`, \n          {headers : {\n              \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`}});\n          if(response.data && response.status === 200){\n              dispatch({\n                  type : \"GET_ALL_EMAIL_LIST\",\n                  payload : response.data\n              })\n           }\n      }\n      catch(error){\n          console.log(\"something went wrong\");\n      }\n  }\n}\n\nexport const SENT_EMAIL_COMPOSE = task => {\n  \n  return async dispatch => {\n    console.log(task);\n    let response = await axios.post(`${baseUrl}/api/email_compose/send_email/${localStorage.getItem(\"user_id\")}`, {...task}, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`,\n        'content-type': 'application/json'\n      }\n    })\n    if(response.data && response.status === 200){\n      console.log(response.data,\"send email\");\n    }\n    else{\n      console.log(\"Something went wrong\");\n    }\n  }\n}\n\nexport const moveMail = (id) => {\n  return dispatch => {\n    // console.log(\"hey there i ma coming>>>>>\",id)\n    axios.delete(`${baseUrl}/api/email_compose/remove_template/${localStorage.getItem(\"user_id\")}/${id}`, {\n      headers : {\n        \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`\n      }\n    }).then(res => {\n      dispatch(GetAllEmailList());\n    })\n    \n  }\n}\n\nexport const CREATE_FOLDER_CATEGORY = task => {\n  return dispatch => {\n     axios.post(`${baseUrl}/api/email_compose/addCategory/${localStorage.getItem(\"user_id\")}`, {...task}, {\n      headers : {\n        \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`\n      }\n    }).then(res => {\n      dispatch(GetFolderList());\n    })\n  }\n}\nexport const GetFolderList = () => {\n  return async dispatch => {\n      try{\n          let response = await axios.get(`${baseUrl}/api/email_compose/category_list/${localStorage.getItem(\"user_id\")}`, \n          {headers : {\n              \"Authorization\" : `Bearer ${localStorage.getItem(\"access_token\")}`}});\n          if(response.data && response.status === 200){\n              dispatch({\n                  type : \"GET_FOLDER_LIST\",\n                  payload : response.data\n              })\n           }\n      }\n      catch(error){\n          console.log(\"something went wrong\");\n      }\n  }\n}\n"],"sourceRoot":""}