{"version":3,"sources":["redux/actions/chat/index.js","../node_modules/reactstrap/es/FormGroup.js","../node_modules/react-sidebar/dist/react-sidebar.esm.js","../node_modules/@babel/runtime/helpers/objectSpread.js"],"names":["getChats","dispatch","axios","get","then","response","type","contacts","data","chats","catch","err","console","log","getContactChats","togglePinned","id","value","post","contactId","sendMessage","isPinned","text","length","newMsg","textContent","isSent","isSeen","time","Date","toString","message","msg","changeStatus","status","searchContacts","query","markSeenAllMessages","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","className","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","defaultStyles","position","top","left","right","bottom","overflow","zIndex","transition","WebkitTransition","willChange","overflowY","WebkitOverflowScrolling","opacity","visibility","backgroundColor","Sidebar","_Component","_this","call","this","state","sidebarWidth","defaultSidebarWidth","touchIdentifier","touchStartX","touchCurrentX","dragSupported","overlayClicked","bind","_assertThisInitialized","onTouchStart","onTouchMove","onTouchEnd","onScroll","saveSidebarRef","_inheritsLoose","_proto","prototype","componentDidMount","isIos","test","navigator","userAgent","setState","window","saveSidebarWidth","componentDidUpdate","isTouching","ev","touch","targetTouches","identifier","clientX","ind","touchWidth","touchSidebarWidth","open","dragToggleDistance","onSetOpen","inCancelDistanceOnScroll","pullRight","Math","abs","width","sidebar","offsetWidth","innerWidth","min","render","dragHandle","sidebarStyle","_objectSpread","styles","contentStyle","content","overlayStyle","overlay","useTouch","rootProps","rootClassName","style","root","role","rootId","hasBoxShadow","shadow","docked","transform","WebkitTransform","boxShadow","percentage","transitions","onTouchCancel","dragHandleStyle","touchHandleWidth","sidebarClassName","ref","sidebarId","overlayClassName","onClick","overlayId","contentClassName","contentId","Component","defineProperty","module","exports","target","i","arguments","source","Object","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","__esModule"],"mappings":"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","file":"static/js/24.25385517.chunk.js","sourcesContent":["import axios from \"axios\"\n\nexport const getChats = () => {\n  return dispatch => {\n    axios\n      .get(\"api/app/chat/chats\")\n      .then(response => {\n        dispatch({\n          type: \"GET_CONTACTS\",\n          contacts: response.data.contacts,\n          chats: response.data.chats\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const getContactChats = () => {\n  return dispatch => {\n    axios\n      .get(\"api/app/chat/chat-contacts\")\n      .then(response => {\n        dispatch({\n          type: \"GET_CHAT_CONTACTS\",\n          chats: response.data\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const togglePinned = (id, value) => {\n  return dispatch => {\n    axios\n      .post(\"/api/apps/chat/set-pinned/\", {\n        contactId: id,\n        value\n      })\n      .then(response => {\n        dispatch({\n          type: \"SET_PINNED\",\n          id,\n          value\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const sendMessage = (id, isPinned, text) => {\n  if (text.length > 0) {\n    return dispatch => {\n      let newMsg = {\n        textContent: text,\n        isSent: true,\n        isSeen: false,\n        time: new Date().toString()\n      }\n      axios\n        .post(\"/api/app/chat/send-message\", {\n          contactId: id,\n          message: newMsg,\n          isPinned\n        })\n        .then(response => {\n          dispatch({\n            type: \"SEND_MESSAGE\",\n            msg: newMsg,\n            id,\n            isPinned,\n            text\n          })\n          dispatch(getChats())\n        })\n        .catch(err => console.log(err))\n    }\n  } else {\n    return\n  }\n}\n\nexport const changeStatus = status => {\n  return dispatch => {\n    dispatch({\n      type: \"CHANGE_STATUS\",\n      status\n    })\n  }\n}\n\nexport const searchContacts = query => {\n  return dispatch => {\n    dispatch({\n      type: \"SEARCH_CONTACTS\",\n      query\n    })\n  }\n}\n\nexport const markSeenAllMessages = id => {\n  return dispatch => {\n    axios\n      .post(\"/api/apps/chat/mark-all-seen/\", {\n        contactId: id\n      })\n      .then(response => {\n        dispatch({\n          type: \"MARK_AS_SEEN\",\n          id\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import _objectSpread from '@babel/runtime/helpers/objectSpread';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\nvar defaultStyles = {\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  dragHandle: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    bottom: 0\n  }\n};\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Sidebar, _Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth,\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchCurrentX: null,\n      // if touch is supported by the browser\n      dragSupported: false\n    };\n    _this.overlayClicked = _this.overlayClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchEnd = _this.onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveSidebarRef = _this.saveSidebarRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Sidebar.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var isIos = /iPad|iPhone|iPod/.test(navigator ? navigator.userAgent : \"\");\n    this.setState({\n      dragSupported: typeof window === \"object\" && \"ontouchstart\" in window && !isIos\n    });\n    this.saveSidebarWidth();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // filter out the updates when we're touching\n    if (!this.isTouching()) {\n      this.saveSidebarWidth();\n    }\n  };\n\n  _proto.onTouchStart = function onTouchStart(ev) {\n    // filter out if a user starts swiping with a second finger\n    if (!this.isTouching()) {\n      var touch = ev.targetTouches[0];\n      this.setState({\n        touchIdentifier: touch.identifier,\n        touchStartX: touch.clientX,\n        touchCurrentX: touch.clientX\n      });\n    }\n  };\n\n  _proto.onTouchMove = function onTouchMove(ev) {\n    if (this.isTouching()) {\n      for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n        // we only care about the finger that we are tracking\n        if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n          this.setState({\n            touchCurrentX: ev.targetTouches[ind].clientX\n          });\n          break;\n        }\n      }\n    }\n  };\n\n  _proto.onTouchEnd = function onTouchEnd() {\n    if (this.isTouching()) {\n      // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n      var touchWidth = this.touchSidebarWidth();\n\n      if (this.props.open && touchWidth < this.state.sidebarWidth - this.props.dragToggleDistance || !this.props.open && touchWidth > this.props.dragToggleDistance) {\n        this.props.onSetOpen(!this.props.open);\n      }\n\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // This logic helps us prevents the user from sliding the sidebar horizontally\n  // while scrolling the sidebar vertically. When a scroll event comes in, we're\n  // cancelling the ongoing gesture if it did not move horizontally much.\n\n\n  _proto.onScroll = function onScroll() {\n    if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // True if the on going gesture X distance is less than the cancel distance\n\n\n  _proto.inCancelDistanceOnScroll = function inCancelDistanceOnScroll() {\n    var cancelDistanceOnScroll;\n\n    if (this.props.pullRight) {\n      cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n    } else {\n      cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n    }\n\n    return cancelDistanceOnScroll;\n  };\n\n  _proto.isTouching = function isTouching() {\n    return this.state.touchIdentifier !== null;\n  };\n\n  _proto.overlayClicked = function overlayClicked() {\n    if (this.props.open) {\n      this.props.onSetOpen(false);\n    }\n  };\n\n  _proto.saveSidebarWidth = function saveSidebarWidth() {\n    var width = this.sidebar.offsetWidth;\n\n    if (width !== this.state.sidebarWidth) {\n      this.setState({\n        sidebarWidth: width\n      });\n    }\n  };\n\n  _proto.saveSidebarRef = function saveSidebarRef(node) {\n    this.sidebar = node;\n  }; // calculate the sidebarWidth based on current touch info\n\n\n  _proto.touchSidebarWidth = function touchSidebarWidth() {\n    // if the sidebar is open and start point of drag is inside the sidebar\n    // we will only drag the distance they moved their finger\n    // otherwise we will move the sidebar to be below the finger.\n    if (this.props.pullRight) {\n      if (this.props.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {\n        if (this.state.touchCurrentX > this.state.touchStartX) {\n          return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;\n        }\n\n        return this.state.sidebarWidth;\n      }\n\n      return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n\n    if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n      if (this.state.touchCurrentX > this.state.touchStartX) {\n        return this.state.sidebarWidth;\n      }\n\n      return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;\n    }\n\n    return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n  };\n\n  _proto.render = function render() {\n    var sidebarStyle = _objectSpread({}, defaultStyles.sidebar, this.props.styles.sidebar);\n\n    var contentStyle = _objectSpread({}, defaultStyles.content, this.props.styles.content);\n\n    var overlayStyle = _objectSpread({}, defaultStyles.overlay, this.props.styles.overlay);\n\n    var useTouch = this.state.dragSupported && this.props.touch;\n    var isTouching = this.isTouching();\n    var rootProps = {\n      className: this.props.rootClassName,\n      style: _objectSpread({}, defaultStyles.root, this.props.styles.root),\n      role: \"navigation\",\n      id: this.props.rootId\n    };\n    var dragHandle;\n    var hasBoxShadow = this.props.shadow && (isTouching || this.props.open || this.props.docked); // sidebarStyle right/left\n\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = \"translateX(100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = \"translateX(-100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    }\n\n    if (isTouching) {\n      var percentage = this.touchSidebarWidth() / this.state.sidebarWidth; // slide open to what we dragged\n\n      if (this.props.pullRight) {\n        sidebarStyle.transform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n      } else {\n        sidebarStyle.transform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n      } // fade overlay to match distance of drag\n\n\n      overlayStyle.opacity = percentage;\n      overlayStyle.visibility = \"visible\";\n    } else if (this.props.docked) {\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = \"translateX(0%)\";\n        sidebarStyle.WebkitTransform = \"translateX(0%)\";\n      } // make space on the left/right side of the content for the sidebar\n\n\n      if (this.props.pullRight) {\n        contentStyle.right = this.state.sidebarWidth + \"px\";\n      } else {\n        contentStyle.left = this.state.sidebarWidth + \"px\";\n      }\n    } else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = \"translateX(0%)\";\n      sidebarStyle.WebkitTransform = \"translateX(0%)\"; // show overlay\n\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = \"visible\";\n    }\n\n    if (isTouching || !this.props.transitions) {\n      sidebarStyle.transition = \"none\";\n      sidebarStyle.WebkitTransition = \"none\";\n      contentStyle.transition = \"none\";\n      overlayStyle.transition = \"none\";\n    }\n\n    if (useTouch) {\n      if (this.props.open) {\n        rootProps.onTouchStart = this.onTouchStart;\n        rootProps.onTouchMove = this.onTouchMove;\n        rootProps.onTouchEnd = this.onTouchEnd;\n        rootProps.onTouchCancel = this.onTouchEnd;\n        rootProps.onScroll = this.onScroll;\n      } else {\n        var dragHandleStyle = _objectSpread({}, defaultStyles.dragHandle, this.props.styles.dragHandle);\n\n        dragHandleStyle.width = this.props.touchHandleWidth; // dragHandleStyle right/left\n\n        if (this.props.pullRight) {\n          dragHandleStyle.right = 0;\n        } else {\n          dragHandleStyle.left = 0;\n        }\n\n        dragHandle = React.createElement(\"div\", {\n          style: dragHandleStyle,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this.onTouchMove,\n          onTouchEnd: this.onTouchEnd,\n          onTouchCancel: this.onTouchEnd\n        });\n      }\n    }\n\n    return React.createElement(\"div\", rootProps, React.createElement(\"div\", {\n      className: this.props.sidebarClassName,\n      style: sidebarStyle,\n      ref: this.saveSidebarRef,\n      id: this.props.sidebarId\n    }, this.props.sidebar), React.createElement(\"div\", {\n      className: this.props.overlayClassName,\n      style: overlayStyle,\n      onClick: this.overlayClicked,\n      id: this.props.overlayId\n    }), React.createElement(\"div\", {\n      className: this.props.contentClassName,\n      style: contentStyle,\n      id: this.props.contentId\n    }, dragHandle, this.props.children));\n  };\n\n  return Sidebar;\n}(Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Sidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object,\n    dragHandle: PropTypes.object\n  }),\n  // root component optional class\n  rootClassName: PropTypes.string,\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n  // content optional class\n  contentClassName: PropTypes.string,\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  // max distance from the edge we can start touching\n  touchHandleWidth: PropTypes.number,\n  // Place the sidebar on the right\n  pullRight: PropTypes.bool,\n  // Enable/Disable sidebar shadow\n  shadow: PropTypes.bool,\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n  // root component optional id\n  rootId: PropTypes.string,\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n  // content optional id\n  contentId: PropTypes.string,\n  // overlay optional id\n  overlayId: PropTypes.string\n} : void 0;\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  touchHandleWidth: 20,\n  pullRight: false,\n  shadow: true,\n  dragToggleDistance: 30,\n  onSetOpen: function onSetOpen() {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\n\nexport default Sidebar;\n","var defineProperty = require(\"./defineProperty.js\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;"],"sourceRoot":""}