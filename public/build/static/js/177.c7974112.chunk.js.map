{"version":3,"sources":["views/apps/user/list/activeUsersList.js"],"names":["UsersLists","state","checkboxSelectionIds","rowData","pageSize","isVisible","reload","collapse","status","role","selectStatus","verified","department","loading","defaultColDef","sortable","resizable","searchVal","columnDefs","headerName","field","width","checkboxSelection","headerCheckboxSelectionFilteredOnly","headerCheckboxSelection","filter","cellRendererFramework","params","className","onClick","history","push","pathname","userId","data","studentId","_id","src","value","alt","height","firstName","lastName","toUpperCase","substr","toLowerCase","size","getRowHeight","onGridReady","gridApi","api","gridColumnApi","columnApi","filterData","column","val","modelObj","type","getFilterInstance","setModel","onFilterChanged","filterSize","paginationSetPageSize","Number","setState","updateSearchQuery","setQuickFilter","refreshCard","setTimeout","toggleCollapse","onEntered","onEntering","onExiting","onExited","removeCard","handleDeleteStudent","studentIds","props","STUDENTS_REMOVE","console","log","this","GET_ACTIVE_STUDENT","prevProps","active_student","selectedRows","getSelectedRows","forEach","selectedRow","index","paymentslistobject","sm","breadCrumbTitle","breadCrumbParent","breadCrumbActive","style","padding","href","toggleModal","length","tag","right","placeholder","onChange","e","target","id","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","paginationPageSize","enableRtl","direction","onSelectionChanged","bind","React","Component","connect","student"],"mappings":"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","file":"static/js/177.c7974112.chunk.js","sourcesContent":["import React from \"react\"\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Input,\n  Row,\n  Col,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  Button\n\n} from \"reactstrap\"\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\"\n// import axios from \"axios\"\nimport { ContextLayout } from \"../../../../utility/context/Layout\"\nimport { GET_ACTIVE_STUDENT, STUDENTS_REMOVE } from '../../../../redux/actions/newstudent/index';\nimport { connect } from 'react-redux';\nimport { AgGridReact } from \"ag-grid-react\"\nimport {\n  ChevronDown,\n  Printer,\n  Download,\n  Info,\n  // Mail,\n  Phone,\n  // Eye,\n  Delete,\n  Plus\n} from \"react-feather\"\n// import classnames from \"classnames\"\nimport { history } from \"../../../../history\"\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\"\nimport \"../../../../assets/scss/pages/users.scss\"\nimport CandidateModal from \"./CandidateModal\"\nimport TestModal from \"./TestModal\"\n// import Spinner from \"\"\nimport Spinner from \"../../../../components/@vuexy/spinner/Loading-spinner\"\n\n// import { css } from \"@emotion/core\";\nimport StudentlistuserEyeModal from \"./studentlistuserEyeModal\"\nimport StudentlistuserEmailModal from \"../../../pages/studentlistEmailicon/studentlistuserEmailModal\"\nimport StusercalliconModal from \"../../../pages/studentlisticoncall/stusercalliconModal\"\n\n// const override = css`\n//   display: block;\n//   margin: 0 auto;\n//   margin-top: 45px;\n//   border-color: red;\n// `;\n\nclass UsersLists extends React.Component {\n  state = {\n    checkboxSelectionIds: [],\n    rowData: null,\n    pageSize: 20,\n    isVisible: true,\n    reload: false,\n    collapse: true,\n    status: \"Opened\",\n    role: \"All\",\n    selectStatus: \"All\",\n    verified: \"All\",\n    department: \"All\",\n    loading: true,\n    defaultColDef: {\n      sortable: true,\n      resizable: true\n    },\n    searchVal: \"\",\n    columnDefs: [\n      {\n        headerName: \"\",\n        field: \"\",\n        width: 50,\n        checkboxSelection: true,\n        headerCheckboxSelectionFilteredOnly: true,\n        headerCheckboxSelection: true,\n      },\n      {\n        headerName: \"Photo\",\n        field: \"memberprofileImage\",\n        filter: true,\n        width: 100,\n        cellRendererFramework: params => {\n          return (\n            <div\n              className=\"d-flex align-items-center cursor-pointer\"\n              onClick={() => history.push({\n                pathname: \"/student-info\",\n                state: {\n                  userId: params.data.userId,\n                  studentId: params.data._id,\n                  data: params.data\n                }\n              })}\n            >\n              <img\n                className=\"rounded-circle mr-50\"\n                src={params.value}\n                alt=\"user avatar\"\n                height=\"50\"\n                width=\"50\"\n              />\n              {/* <span>{params.data.name}</span> */}\n            </div>\n          )\n        }\n      },\n      {\n        headerName: \"Full Name\",\n        field: \"firstName\",\n        filter: true,\n        width: 180,\n        cellRendererFramework: params => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.firstName+\" \"+params.data.lastName}</span>\n            </div>\n          )\n        }\n      },\n      {\n        headerName: \"Last Name\",\n        field: \"lastName\",\n        filter: true,\n        width: 160,\n        cellRendererFramework: (params) => {\n          return `${params.value[0].toUpperCase()}${params.value.substr(1).toLowerCase()}`;\n        }\n      },\n\n      {\n        headerName: \"Status\",\n        field: \"status\",\n        filter: true,\n        width: 150,\n        cellRendererFramework: params => {\n          return params.value.toLowerCase() === \"active\" ? (\n            <div className=\"badge badge-pill badge-light-success\">\n              Active\n            </div>\n          ) : params.value.toLowerCase() === \"expired\" ? (\n            <div className=\"badge badge-pill badge-light-danger\">\n              Expired\n            </div>\n          ) : params.value.toLowerCase() === \"Freezed\" ? (\n            <div className=\"badge badge-pill badge-light-yellow\">\n              Frozen\n            </div>\n          ) : params.value.toLowerCase() === \"overdue\" ? (\n            <div className=\"badge badge-pill badge-light-orange\">\n              Overdue\n            </div>\n          ) : params.value.toLowerCase() === \"terminate\" ? (\n            <div className=\"badge badge-pill badge-light-danger\">\n              Terminate\n            </div>\n          ) : params.value.toLowerCase() === \"inactive\" ? (\n            <div className=\"badge badge-pill badge-light-grey\">\n              None\n            </div>\n          ) : <div className=\"badge badge-pill badge-light-grey\">\n              None\n       </div>\n        }\n      },\n      {\n        headerName: \"Primary Phone\",\n        field: \"primaryPhone\",\n        filter: true,\n        width: 150\n      },\n\n      {\n        headerName: \"Program Category\",\n        field: \"category\",\n        filter: true,\n        width: 150,\n        cellRendererFramework: params => {\n          return params.value=== \"program3\" ? (\n            <div className=\"badge badge-pill badge-light-orange\">\n             Pragrame3\n            </div>\n          ) : params.value === \"Program 4\" ? (\n            <div className=\"badge badge-pill badge-light-grey\">\n             Program 4\n\n            </div>\n          ) : <div className=\"badge badge-pill badge-light-light\">\n          <div className=\"badge badge-pill badge-light-grey\">\n            N/A\n          </div>\n       </div>\n        }\n      },\n      {\n        headerName: \"Start Date\",\n        field: \"createdAt\",\n        filter: true,\n        width: 170\n      },\n      {\n        headerName: \"Expiry Date\",\n        field: \"createdAt\",\n        filter: true,\n        width: 170,\n        // cellRendererFramework: params => {\n        //   return params.value.toUpperCase();\n        // }\n      },\n      {\n        headerName: \"Rating\",\n        field: \"rating\",\n        filter: true,\n        width: 100,\n        cellRendererFramework: params => {\n          return params.value == 0 ? (\n            <div className=\"badge-light-dangers\">\n              {params.value}\n            </div>\n          ) :params.value <= 7 ? (\n            <div className=\"badge-light-successs\">\n              {params.value}\n            </div>\n          ) : params.value <= 15 ? (\n            <div className=\"badge-light-yellows\">\n              {params.value}\n            </div>\n          ): params.value <= 1000 ? (\n            <div className=\"badge-light-dangers\">\n             {params.value}\n            </div>\n          ) : <div className=\"badge badge-pill badge-light-grey\">\n                        None\n       </div>\n        }\n\n      },\n      {\n        headerName: \"Manage\",\n        field: \"transactions\",\n        width: 150,\n        cellRendererFramework: params => {\n          return (\n            <div className=\"actions cursor-pointer\">\n              <Info\n                className=\"mr-50\"\n                size={18}\n              />\n              <StudentlistuserEyeModal />\n\n              <StudentlistuserEmailModal />\n              <StusercalliconModal />\n              {/* <Phone\n               className=\"mr-50\"\n               size={20}\n              /> */}\n\n            </div>\n          )\n        }\n      }\n    ],\n    getRowHeight: function (params) {\n      return 70;\n    }\n  }\n\n  componentDidMount() {\n\n    this.props.GET_ACTIVE_STUDENT();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.active_student !== this.props.active_student) {\n      this.setState({\n        rowData: this.props.active_student,\n        loading: false\n\n      })\n    }\n  }\n\n  onGridReady = params => {\n    this.gridApi = params.api\n    this.gridColumnApi = params.columnApi\n  }\n\n  filterData = (column, val) => {\n    var filter = this.gridApi.getFilterInstance(column)\n    var modelObj = null\n    if (val !== \"all\") {\n      modelObj = {\n        type: \"equals\",\n        filter: val\n      }\n    }\n    filter.setModel(modelObj)\n    this.gridApi.onFilterChanged()\n  }\n\n  filterSize = val => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val))\n      this.setState({\n        pageSize: val\n      })\n    }\n  }\n  updateSearchQuery = val => {\n    this.gridApi.setQuickFilter(val)\n    this.setState({\n      searchVal: val\n    })\n  }\n\n  refreshCard = () => {\n    this.setState({ reload: true })\n    setTimeout(() => {\n      this.setState({\n        reload: false,\n        role: \"All\",\n        selectStatus: \"All\",\n        verified: \"All\",\n        department: \"All\"\n      })\n    }, 500)\n  }\n\n  toggleCollapse = () => {\n    this.setState(state => ({ collapse: !state.collapse }))\n  }\n  onEntered = () => {\n    this.setState({ status: \"Opened\" })\n  }\n  onEntering = () => {\n    this.setState({ status: \"Opening...\" })\n  }\n\n  onEntered = () => {\n    this.setState({ status: \"Opened\" })\n  }\n  onExiting = () => {\n    this.setState({ status: \"Closing...\" })\n  }\n  onExited = () => {\n    this.setState({ status: \"Closed\" })\n  }\n  removeCard = () => {\n    this.setState({ isVisible: false })\n  }\n\n  handleDeleteStudent = () => {\n    const studentIds = this.state.checkboxSelectionIds;\n    \n\n    this.props.STUDENTS_REMOVE(studentIds);\n    console.log(studentIds, \" << handleDeleteStudent\");\n  }\n\n  onSelectionChanged() {\n    var selectedRows = this.gridApi.getSelectedRows();\n    let checkboxSelectionIds = [];\n    console.log(selectedRows);\n    selectedRows.forEach(function(selectedRow, index) {\n      let paymentslistobject = selectedRow[\"_id\"];\n      checkboxSelectionIds.push(paymentslistobject);\n    });\n\n    this.setState({ checkboxSelectionIds: checkboxSelectionIds });\n  }\n\n  render() {\n    const { rowData, columnDefs, defaultColDef, pageSize, checkboxSelectionIds } = this.state\n\n    return (\n      <Row className=\"app-user-list\">\n\n\n        <Col sm=\"12\">\n          <Breadcrumbs\n            breadCrumbTitle=\"Active Student\"\n            breadCrumbParent=\"Home\"\n            breadCrumbActive=\"Active Student\"\n          />\n          <Card>\n            <CardHeader style={{padding:\"0.5rem 1.5rem 0\"}}>\n              <div className=\"list-icon\">\n                <a href=\"/data-list/add-new-student\">\n                  <Button\n                    className=\"btn-lg fides btn waves-effect waves-light\"\n                    onClick={this.toggleModal}\n                  >\n                    <Plus size={21} />\n                    <br></br>\n                  Add\n                </Button>\n                </a>\n\n                <Button className=\"btn-lg fides5 btn waves-effect waves-light\">\n                  <Phone size={21} />\n                  <br></br>\n                  Contact\n                </Button>\n                {/* <Button className=\"btn-lg fides4 btn waves-effect waves-light\">\n                  <User size={21} />\n                  <br></br>\n                  Candidate\n                </Button> */}\n                <CandidateModal />\n                <TestModal />\n                {/* <Button className=\"btn-lg fides3 btn waves-effect waves-light\">\n                  <Plus size={21} />\n                  <br></br>\n                  Test\n                </Button> */}\n                <Button className=\"btn-lg fides2 btn waves-effect waves-light\">\n                  <Printer size={21} />\n                  <br></br>\n                  Print\n                </Button>\n                <Button className=\"btn-lg fides1 btn waves-effect waves-light\">\n                  <Download size={21} />\n                  <br></br>\n                  Export\n                </Button>\n\n                {checkboxSelectionIds.length ? \n                  <Button className=\"btn-lg fides1 btn waves-effect waves-danger\" onClick={this.handleDeleteStudent}>\n                    <Delete size={21} />\n                    <br></br>\n                    Delete\n                  </Button>\n                  : ''\n                }\n              </div>\n            </CardHeader>\n            <CardBody style={{padding:\"0.5rem 1rem\"}}>\n              <div className=\"ag-theme-material ag-grid-table\">\n                <div className=\"ag-grid-actions d-flex justify-content-between flex-wrap mb-1\">\n                  <div className=\"sort-dropdown\">\n                    <UncontrolledDropdown className=\"ag-dropdown p-1\">\n                      <DropdownToggle tag=\"div\">\n                        1 - {pageSize} of 150\n                        <ChevronDown className=\"ml-50\" size={15} />\n                      </DropdownToggle>\n                      <DropdownMenu right>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(20)}\n                        >\n                          20\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(50)}\n                        >\n                          50\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(100)}\n                        >\n                          100\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(150)}\n                        >\n                          150\n                        </DropdownItem>\n                      </DropdownMenu>\n                    </UncontrolledDropdown>\n                  </div>\n                  <div className=\"filter-actions d-flex\">\n                    <Input\n                      className=\"w-70 mr-1 mb-1 mb-sm-0\"\n                      type=\"text\"\n                      placeholder=\"search...\"\n                      onChange={e => this.updateSearchQuery(e.target.value)}\n                      value={this.state.searchVal}\n                    />\n                  </div>\n                </div>\n                {!this.state.loading ? (\n                  <>\n                {this.state.rowData !== null ? (\n                  <ContextLayout.Consumer>\n                    {context => (\n                      <AgGridReact\n                        gridOptions={{}}\n                        rowSelection=\"multiple\"\n                        defaultColDef={defaultColDef}\n                        columnDefs={columnDefs}\n                        rowData={rowData}\n                        onGridReady={this.onGridReady}\n                        colResizeDefault={\"shift\"}\n                        animateRows={true}\n                        floatingFilter={true}\n                        pagination={true}\n                        pivotPanelShow=\"always\"\n                        paginationPageSize={pageSize}\n                        resizable={true}\n                        getRowHeight={this.state.getRowHeight}\n                        enableRtl={context.state.direction === \"rtl\"}\n                        onSelectionChanged={this.onSelectionChanged.bind(this)}\n                      />\n                    )}\n                  </ContextLayout.Consumer>\n                ) : null}\n\n               </> ):( <div id=\"loading-bar\">\n\n            <Spinner loading={true}/>\n          </div>\n          )}\n              </div>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    active_student: state.student.active_student\n  }\n}\n\nexport default connect(mapStateToProps, { GET_ACTIVE_STUDENT, STUDENTS_REMOVE })(UsersLists)\n"],"sourceRoot":""}